{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.module.ts","./src/app/account/account.routing-module.ts","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-callback/auth-callback.component.ts","./src/app/auth-callback/auth-callback.component.html","./src/app/core/authentication/auth.guard.ts","./src/app/core/authentication/auth.service.ts","./src/app/feed-container/feed-container.component.ts","./src/app/feed-container/feed-container.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/my-feed/my-feed.component.ts","./src/app/my-feed/my-feed.component.html","./src/app/my-feed/my-feed.service.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/news-feed/news-feed.component.ts","./src/app/news-feed/news-feed.component.html","./src/app/ngmaterial/ngmaterial.module.ts","./src/app/pipes/linkify-pipe.ts","./src/app/pipes/stirp-html-pipe.ts","./src/app/post-details/post-details.component.ts","./src/app/post-details/post-details.component.html","./src/app/shared/base.service.ts","./src/app/shared/config.service.ts","./src/app/shared/directives/auto-focus.directive.ts","./src/app/shared/shared.module.ts","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/app/shell/shell.module.ts","./src/app/shell/shell.service.ts","./src/app/stock/stock.component.ts","./src/app/stock/stock.component.html","./src/app/submit-post-form/submit-post-form.component.ts","./src/app/submit-post-form/submit-post-form.component.html","./src/app/tag/tag.component.ts","./src/app/tag/tag.component.html","./src/app/top-secret/index/index.component.ts","./src/app/top-secret/index/index.component.html","./src/app/top-secret/top-secret.module.ts","./src/app/top-secret/top-secret.routing-module.ts","./src/app/top-secret/top-secret.service.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/watchlist/watchlist.component.ts","./src/app/watchlist/watchlist.component.html","./src/app/watchlist/watchlist.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { AccountRoutingModule } from './account.routing-module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MyFeedService } from '../my-feed/my-feed.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent, \r\n    LoginComponent    \r\n  ],\r\n  imports: [\r\n    CommonModule,    \r\n    ReactiveFormsModule,\r\n    AccountRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [AuthService, MyFeedService],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { Shell } from './../shell/shell.service';\r\n\r\nconst routes: Routes = [\r\nShell.childRoutes([\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent }    \r\n  ])\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AccountRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit { \r\n\r\n  returnUrl: string;  \r\n  loginForm = this.formBuilder.group({\r\n    username: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n    rememberMe: [false]\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService, \r\n    private spinner: NgxSpinnerService) { }    \r\n  \r\n    title = \"Login\";\r\n    \r\n    login() {     \r\n      this.spinner.show();\r\n      this.authService.login();\r\n    }   \r\n\r\n    ngOnInit() {\r\n      this.returnUrl = \"http://localhost:4200/home\";\r\n    }\r\n\r\n    onSubmit() {\r\n      this.spinner.show();\r\n      //this.authService.login()      \r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"login-section\">\r\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\r\n            <div class=\"form-header\">\r\n                <h1>Welcome to Tiririt!</h1>\r\n            </div>\r\n            <input type=\"hidden\" id=\"returnUrl\" name=\"returnUrl\" value=\"{{ returnUrl }}\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\" required\r\n                    formControlName=\"username\" class=\"form-control\" autofocus>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" required\r\n                    formControlName=\"password\" class=\"form-control\" >\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\">                \r\n                <label for=\"rememberLogin\">Remember me</label>                    \r\n            </div>            \r\n        </form>\r\n\r\n        <a href=\"#\">Forgot password?</a>\r\n        <button class=\"btn btn-lg btn-primary\" [disabled]=\"!loginForm\">Sign In</button>\r\n        <ngx-spinner></ngx-spinner>        \r\n    </div>\r\n\r\n    <div class=\"welcome-section\">\r\n        <app-my-feed></app-my-feed>\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8 text-center\">\r\n        <h1 class=\"mt-5\">{{title}}</h1>\r\n        <p class=\"lead\">This step uses the <a href=\"http://docs.identityserver.io/en/latest/topics/grant_types.html#implicit\" target=\"_blank\">implicit flow type</a> and redirects to the IdentityServer instance to perform the authentication step.   Before you can login here, you must <a routerLink=\"/register\">register a new account</a>.</p>\r\n        <img src=\"assets/images/open-identity.png\" width=\"175\" class=\"mb-4\" />\r\n        <p>\r\n            <button class=\"btn btn-lg btn-primary\" (click)=\"login()\">Login with IdentityServer</button>\r\n        </p>     \r\n      </div>\r\n  </div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UserRegistration }    from '../../shared/models/user.registration';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  success: boolean;\r\n  error: string;\r\n  // userRegistration: UserRegistration = { userName: '', first: '', email: '', password: ''};\r\n  submitted: boolean = false;\r\n\r\n  registrationForm = this.formBuilder.group({\r\n    userName: ['', Validators.required],\r\n    emailAddress: ['', Validators.email],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  });  \r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService, \r\n    private spinner: NgxSpinnerService) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() { \r\n\r\n    this.spinner.show();\r\n\r\n    let formValue = this.registrationForm.value;\r\n\r\n    this.authService.register(formValue)\r\n      .pipe(finalize(() => {\r\n        this.spinner.hide();\r\n      }))  \r\n      .subscribe(\r\n        result => {         \r\n          if(result) {\r\n            this.success = true;\r\n          }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.error = error;       \r\n      });\r\n  }\r\n}","<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-4 text-center\">\r\n      <form *ngIf=\"!success\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"registrationForm\">\r\n        <img class=\"mb-4\" src=\"assets/images/angular_solidBlack.svg\" alt=\"\" width=\"125\" height=\"125\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"sr-only\">User Name</label>\r\n            <input type=\"text\" id=\"userName\" name=\"userName\" \r\n              formControlName=\"userName\" class=\"form-control\" placeholder=\"Your User Name\" required autoFocus>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"email\" class=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" \r\n              formControlName=\"emailAddress\" class=\"form-control\" placeholder=\"Email address\" email required>\r\n\r\n            <!-- <small [hidden]=\"emailAddress.valid || (emailAddress.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\"\r\n              class=\"form-control\" placeholder=\"Password\" aria-describedby=\"passwordHelp\" required>     \r\n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Min. 6 characters with at least one non alphanumeric character</small>\r\n        </div>   \r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\" class=\"sr-only\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" name=\"firstName\" \r\n            formControlName=\"firstName\" class=\"form-control\" placeholder=\"First Name\" required>\r\n\r\n          <!-- <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\" class=\"sr-only\">First Name</label>\r\n          <input type=\"text\" id=\"lastName\" name=\"lastName\" \r\n            formControlName=\"lastName\" class=\"form-control\" placeholder=\"Last Name\" required>\r\n\r\n          <!-- <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>        \r\n\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"!registrationForm.valid\">Go</button>\r\n        <ngx-spinner></ngx-spinner>   \r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\" role=\"alert\">\r\n            <strong>Oops!</strong> {{error}}\r\n        </div>     \r\n      </form>      \r\n      <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\r\n          <h4 class=\"alert-heading\">Well done!</h4>\r\n          <p>Your account was created successfully, <a routerLink=\"/login\">Please login</a> to continue.</p>        \r\n      </div>  \r\n      <!-- <p>\r\n        Form Value: {{ registrationForm.value | json }}\r\n      </p>\r\n      \r\n      \r\n      <p>\r\n        Form Status: {{ registrationForm.status }}\r\n      </p>       -->\r\n    </div> \r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { AuthGuard } from './core/authentication/auth.guard';\r\nimport { LoginComponent } from './account/login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, pathMatch: 'full', canActivate: [AuthGuard] },\r\n  { path: 'post/:postId', component: PostDetailsComponent },\r\n  { path: 'stock/:symbol', component: StockComponent },\r\n  { path: 'user/:username', component: UserComponent },\r\n  { path: 'tag/:tag', component: TagComponent },\r\n  { path: 'auth-callback', component: AuthCallbackComponent },\r\n  // { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Client';\r\n\r\n  constructor(private iconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) {\r\n      this.iconRegistry.addSvgIcon('bearish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bear.svg'));\r\n      this.iconRegistry.addSvgIcon('bullish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bull-face.svg'));\r\n      this.iconRegistry.addSvgIcon('like', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/like.svg'));\r\n  }\r\n}\r\n\r\n\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgMaterialModule } from './ngmaterial/ngmaterial.module';\r\nimport { WatchlistComponent } from './watchlist/watchlist.component';\r\nimport { WatchlistService } from './watchlist/watchlist.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SubmitPostFormComponent } from './submit-post-form/submit-post-form.component';\r\nimport { FeedContainerComponent } from './feed-container/feed-container.component';\r\nimport { MyFeedComponent } from './my-feed/my-feed.component';\r\nimport { MyFeedService } from './my-feed/my-feed.service';\r\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\r\nimport { LinkifyPipe } from './pipes/linkify-pipe';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { StripHtmlPipe } from './pipes/stirp-html-pipe';\r\nimport { AccountModule } from './account/account.module';\r\nimport { ShellModule } from './shell/shell.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { TopSecretModule } from './top-secret/top-secret.module';\r\nimport { AuthService } from './core/authentication/auth.service';\r\nimport { AuthGuard } from './core/authentication/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthCallbackComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    WatchlistComponent,\r\n    SubmitPostFormComponent,\r\n    FeedContainerComponent,\r\n    NewsFeedComponent,\r\n    StripHtmlPipe,\r\n    PostDetailsComponent,\r\n    StockComponent,\r\n    UserComponent,\r\n    TagComponent    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,    \r\n    NgMaterialModule,\r\n    FormsModule,    \r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AccountModule,\r\n    TopSecretModule,\r\n    ShellModule,\r\n    SharedModule\r\n  ],\r\n  providers: [    \r\n    AuthGuard,\r\n    AuthService,\r\n    WatchlistService, \r\n    MyFeedService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth-callback',\r\n  templateUrl: './auth-callback.component.html',\r\n  styleUrls: ['./auth-callback.component.scss']\r\n})\r\nexport class AuthCallbackComponent implements OnInit {\r\n\r\n  error: boolean;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {}\r\n\r\n  async ngOnInit() { \r\n    // check for error\r\n    console.log(this.route.snapshot.fragment);\r\n    if (this.route.snapshot.fragment) {    \r\n      if (this.route.snapshot.fragment.indexOf('error') >= 0) {\r\n        this.error=true; \r\n        return;    \r\n      }\r\n    }\r\n    \r\n    await this.authService.completeAuthentication();      \r\n    this.router.navigate(['/home']);    \r\n  }\r\n}\r\n","<div *ngIf=\"error\" class=\"row justify-content-center\">\r\n    <div class=\"col-md-8 text-center\">\r\n          <div class=\"alert alert-warning\" role=\"alert\">\r\n            Oops, there was an error, please try to <a routerLink=\"/login\">login again</a>.\r\n          </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router, private authService: AuthService) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n        if (this.authService.isAuthenticated()) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login'], { \r\n            queryParams: { redirect: state.url }, replaceUrl: true });        \r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserManager, UserManagerSettings, User } from 'oidc-client';\r\nimport { BehaviorSubject } from 'rxjs'; \r\n\r\nimport { BaseService } from \"../../shared/base.service\";\r\nimport { ConfigService } from '../../shared/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService extends BaseService  {\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private manager = new UserManager(getClientSettings());\r\n  private user: User | null;\r\n\r\n  constructor(private http: HttpClient, private configService: ConfigService) { \r\n    super();     \r\n    \r\n    this.manager.getUser().then(user => { \r\n      this.user = user;      \r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n    });\r\n  }\r\n\r\n  login() { \r\n    return this.manager.signinRedirect();   \r\n  }\r\n\r\n  async completeAuthentication() {\r\n      this.user = await this.manager.signinRedirectCallback();      \r\n      console.log(this.user);\r\n      this._authNavStatusSource.next(this.isAuthenticated());      \r\n  }  \r\n\r\n  register(userRegistration: any) {    \r\n    return this.http.post(this.configService.authApiURI + '/Account/Register', userRegistration).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n\r\n  get authorizationHeaderValue(): string {\r\n    return `${this.user.token_type} ${this.user.access_token}`;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.user != null ? this.user.profile.name : '';\r\n  }\r\n\r\n  async signout() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n}\r\n\r\nexport function getClientSettings(): UserManagerSettings {\r\n  return {\r\n      authority: 'https://localhost/tiririt',\r\n      client_id: 'tiririt',\r\n      redirect_uri: 'http://localhost:4200/auth-callback',\r\n      post_logout_redirect_uri: 'http://localhost:4200/',\r\n      response_type:\"code\",\r\n      scope:\"openid profile api1\",\r\n      filterProtocolClaims: true,\r\n      loadUserInfo: true,\r\n      automaticSilentRenew: true,\r\n      client_secret: \"secret\",\r\n      silent_redirect_uri: 'http://localhost:4200/silent-refresh.html'\r\n  };\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-feed-container',\r\n  templateUrl: './feed-container.component.html',\r\n  styleUrls: ['./feed-container.component.css']\r\n})\r\nexport class FeedContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" backgroundColor=\"primary\" color=\"accent\">\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>chat_bubble_outline</mat-icon>\r\n            My Feed\r\n        </ng-template>\r\n        <app-my-feed></app-my-feed>\r\n    </mat-tab>\r\n    <mat-tab label=\"Trending\">\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>trending_up</mat-icon>\r\n            Trending\r\n        </ng-template>\r\n        Content 3</mat-tab>\r\n    <mat-tab label=\"News\">\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>rss_feed</mat-icon>\r\n            News\r\n        </ng-template>\r\n        <app-news-feed></app-news-feed>\r\n    </mat-tab>\r\n    \r\n</mat-tab-group>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n","\r\n    <div class=\"flexbox-container\">\r\n        <div class=\"flexbox-item side-navigation\">\r\n            <app-watchlist></app-watchlist>\r\n        </div>\r\n        <div class=\"flexbox-item main-content\">\r\n            <div class=\"flex-main-content\">\r\n                <div class=\"flex-main-content-item1\">\r\n                    <app-submit-post-form></app-submit-post-form>\r\n                </div>\r\n                <div class=\"flex-main-content-item2\">\r\n                    <app-feed-container></app-feed-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyFeedService } from './my-feed.service';\r\nimport { PostModel } from './post-model';\r\n\r\n@Component({\r\n  selector: 'app-my-feed',\r\n  templateUrl: './my-feed.component.html',\r\n  styleUrls: ['./my-feed.component.css']\r\n})\r\nexport class MyFeedComponent implements OnInit {\r\n\r\n  myFeed: PostModel[];\r\n\r\n  constructor(private myFeedService: MyFeedService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.myFeedService.getMyFeed()\r\n      .subscribe(result => {\r\n        this.myFeed = result;\r\n        console.log(this.myFeed);\r\n      }, error => console.error(error));\r\n  }\r\n\r\n  goToPost() {\r\n    console.log('hello');\r\n  }\r\n\r\n}\r\n","<div class=\"feed-filter\">\r\n<mat-button-toggle-group appearance=\"legacy\">\r\n    <mat-button-toggle checked>All</mat-button-toggle>\r\n    <mat-button-toggle>Mentions</mat-button-toggle>\r\n    <mat-button-toggle>Watch List</mat-button-toggle>\r\n    <mat-button-toggle>Subscription</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n</div>\r\n\r\n<div *ngFor=\"let post of myFeed\">    \r\n<mat-card>\r\n    <mat-card-header>     \r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-subtitle>\r\n            <div>\r\n            {{ post.userName }}   <br>\r\n            Posted {{ post.postDate }}\r\n            </div>            \r\n            \r\n        </mat-card-subtitle>\r\n        <!-- <div class=\"bearbullindicator\">            \r\n            <mat-icon svgIcon=\"bullish\" *ngIf=\"post.bullBearLevel == 'VeryBullish'\"></mat-icon>\r\n            <mat-icon svgIcon=\"bearish\" *ngIf=\"post.bullBearLevel == 'VeryBearish'\"></mat-icon>\r\n        </div> -->\r\n        <div class=\"bearbullindicator\">\r\n            <div class=\"bearbullindicator1 bullish\"  *ngIf=\"post.bullBearLevel == 'VeryBullish'\">Bullish</div>\r\n            <div class=\"bearbullindicator1 bearish\"  *ngIf=\"post.bullBearLevel == 'VeryBearish'\">Bearish</div>\r\n        </div>\r\n    </mat-card-header>\r\n    \r\n    <mat-card-content>\r\n        <p [innerHTML]=\"post.postText | linkify\"></p>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n        <button mat-icon-button >\r\n            <mat-icon class=\"icon-display\">reply</mat-icon>\r\n        </button>\r\n        <button mat-icon-button >\r\n            <mat-icon class=\"icon-display\">format_quote</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n            <!-- <span matBadge=\"\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.responseCount > 0\"></span> -->\r\n                <mat-icon class=\"icon-display\">mode_comment</mat-icon>\r\n                <span *ngIf=\"post.responseCount > 0\">{{ post.responseCount }}</span>\r\n        </button>\r\n        <button mat-icon-button>\r\n            <!-- <span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.likeCount > 0\"></span> -->\r\n                <!-- <img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                 -->\r\n                <mat-icon svgIcon=\"like\" class=\"icon-display\"></mat-icon>\r\n                <span *ngIf=\"post.likeCount > 0\">{{ post.likeCount }}</span>\r\n        </button>\r\n        <!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\r\n                <img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\r\n        </button> -->\r\n        \r\n    </mat-card-actions>\r\n</mat-card>\r\n<mat-divider></mat-divider>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PostModel } from './post-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyFeedService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getMyFeed(): Observable<PostModel[]> {\r\n    const url = './assets/myfeed.json';\r\n    return this.http.get<PostModel[]>(url);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-nav-menu',\r\n    templateUrl: './nav-menu.component.html',\r\n    styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent \r\n{\r\n    isExpanded = false;\r\n    isAuthenticated = false;\r\n    subscription: Subscription;\r\n    name: string;\r\n\r\n    constructor(private authService: AuthService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.authService.authNavStatus$\r\n            .subscribe(status => { \r\n                this.isAuthenticated = status;\r\n                console.log(`isAuthenticated: ${status}`);\r\n                this.name = this.authService.name;        \r\n            });        \r\n    }\r\n\r\n    async signOut() {\r\n        await this.authService.signout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    collapse() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n}\r\n","<header>\r\n    <nav\r\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n    >\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\"><img alt=\"Titos & Titas of Finance Logo\" src=\"./assets/TandT-150x83-logo.png\" /></a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\".navbar-collapse\"\r\n          aria-label=\"Toggle navigation\"\r\n          [attr.aria-expanded]=\"isExpanded\"\r\n          (click)=\"toggle()\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n          [ngClass]=\"{ show: isExpanded }\"\r\n        >\r\n          <ul class=\"navbar-nav flex-grow\">\r\n            <li\r\n              class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n            >\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n            </li>\r\n              \r\n            <li class=\"nav-item\" *ngIf=\"!isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/register']\">Signup!</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" (click)=\"signOut()\" href=\"javascript:void(0)\">Signout {{ name }}</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div class=\"searchFormField\">\r\n            <mat-form-field>\r\n              <input matInput id=\"searchBox\" placeholder=\"Search\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NewsRss } from './news-rss';\r\n// import * as xml2js from \"xml2js\";\r\n// import { NewsRss } from './news-rss';\r\n\r\n@Component({\r\n  selector: 'app-news-feed',\r\n  templateUrl: './news-feed.component.html',\r\n  styleUrls: ['./news-feed.component.css']\r\n})\r\nexport class NewsFeedComponent implements OnInit {\r\n\r\n  rssData: NewsRss;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRssFeedData();\r\n  }\r\n\r\n  getRssFeedData() {\r\n  \r\n    this.http\r\n      .get<NewsRss>(\"./assets/news-feed.json\")\r\n      .subscribe(data => {          \r\n        this.rssData = data;\r\n        // if (this.rssData) {\r\n        //   for(let i = 0; i < this.rssData.rss.channel.item.length; i++) {\r\n        //     this.rssData.rss.channel.item[i].description = this.rssData.rss.channel.item[i].description.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n        //   }\r\n        // }\r\n        console.log(this.rssData.rss.channel);\r\n      });\r\n  }\r\n\r\n}\r\n","<!-- <ul>\r\n\t<li *ngFor=\"let o of rssData?.rss.channel.item\">\r\n\t\t<a href=\"{{ o.link }}\">{{ o.title }}</a>\r\n\t</li>\r\n</ul> -->\r\n\r\n<div *ngFor=\"let rss of rssData?.rss.channel.item\">    \r\n\t<mat-card>\r\n\t\t<mat-card-header>     \r\n\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\r\n\t\t\t<mat-card-subtitle>\r\n\t\t\t\t<div>\r\n\t\t\t\t<a href=\"https://investing.einnews.com/news/philippine-stock-exchange\">EIN News</a>   <br>\r\n\t\t\t\tPosted {{ rss.pubDate }}\r\n\t\t\t\t</div>            \r\n\t\t\t</mat-card-subtitle>\t\r\n\t\t</mat-card-header>\r\n\t\t\r\n\t\t<mat-card-content>\r\n\t\t\t<a href=\"{{ rss.link }}\"><p>{{ rss.title }}</p></a>\r\n\t\t\t\r\n\t\t\t{{ rss.description | striphtml }}\r\n\t\t</mat-card-content>\r\n\t\r\n\t\t<mat-card-actions>\t\t\t\r\n\t\t\t<button mat-icon-button >\r\n\t\t\t\t<mat-icon class=\"icon-display\">format_quote</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<!-- <button mat-icon-button>\r\n\t\t\t\t<span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\r\n\t\t\t\t\t<mat-icon>mode_comment</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button>\r\n\t\t\t\t<span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                \r\n\t\t\t</button> -->\r\n\t\t\t<!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\r\n\t\t\t</button> -->\r\n\t\t\t\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n\t<mat-divider></mat-divider>\r\n\t</div>","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatBadgeModule\r\n  ],  \r\n  exports: [\r\n    // CommonModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatBadgeModule\r\n  ]\r\n})\r\nexport class NgMaterialModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: \"linkify\"\r\n})\r\nexport class LinkifyPipe implements PipeTransform{\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n\r\n    }\r\n\r\n    transform(value: string, ...args: any[]): any {        \r\n        let result = value.replace(/[\\$|@|\\#][(\\^)a-zA-Z]+/g, (match) => {            \r\n            const linkParam = match.replace(/[\\$|@|\\#]/g, \"\");\r\n            const linkIndicator = match[0];\r\n            switch(linkIndicator)\r\n            {\r\n                case '$':\r\n                    return `<a href=\"/stock/${linkParam}\">${match}</a>`;\r\n                case '@':\r\n                    return `<a href=\"/user/${linkParam}\">${match}</a>`;\r\n                case '#':\r\n                    return `<a href=\"/tag/${linkParam}\">${match}</a>`;\r\n            } \r\n\r\n        });\r\n        return this.domSanitizer.bypassSecurityTrustHtml(result);        \r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'striphtml'\r\n})\r\nexport class StripHtmlPipe implements PipeTransform {\r\n    transform(value: string, ...args: any[]): any {\r\n        return value.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-post-details',\r\n  templateUrl: './post-details.component.html',\r\n  styleUrls: ['./post-details.component.css']\r\n})\r\nexport class PostDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>post-details works!</p>\r\n","import { throwError } from 'rxjs';\r\n\r\nexport abstract class BaseService {  \r\n    \r\n    constructor() { }\r\n\r\n    protected handleError(error: any) {\r\n\r\n      var applicationError = error.headers.get('Application-Error');\r\n\r\n      // either application-error in header or model error in body\r\n      if (applicationError) {\r\n        return throwError(applicationError);\r\n      }\r\n      \r\n      var modelStateErrors: string = '';\r\n\r\n        // for now just concatenate the error descriptions, alternative we could simply pass the entire error response upstream\r\n        for (var key in error.error) {\r\n          if (error.error[key]) modelStateErrors += error.error[key].description + '\\n'; \r\n        }\r\n        \r\n      modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n      return throwError(modelStateErrors || 'Server error');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor() { }\r\n\r\n  get authApiURI() {\r\n      return 'https://localhost/tiririt/api';\r\n  }    \r\n \r\n  get resourceApiURI() {\r\n      return 'https://localhost/tiririt/api';\r\n  }  \r\n\r\n}\r\n","import { AfterContentInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[autoFocus]'\r\n})\r\nexport class AutofocusDirective implements AfterContentInit {\r\n\r\n    @Input() public appAutoFocus: boolean;\r\n\r\n    public constructor(private el: ElementRef) {\r\n    }\r\n\r\n    public ngAfterContentInit() {\r\n\r\n        setTimeout(() => {\r\n            this.el.nativeElement.focus();\r\n        }, 500);\r\n    }\r\n}","// include directives/components commonly used in features modules in this shared modules\r\n// and import me into the feature module\r\n// importing them individually results in: Type xxx is part of the declarations of 2 modules: ... Please consider moving to a higher module...\r\n// https://github.com/angular/angular/issues/10646  \r\n\r\nimport { NgModule }           from '@angular/core';\r\nimport { CommonModule }       from '@angular/common';\r\n \r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AutofocusDirective } from './directives/auto-focus.directive';\r\nimport { NgMaterialModule } from '../ngmaterial/ngmaterial.module';\r\nimport { MyFeedComponent } from '../my-feed/my-feed.component';\r\nimport { MyFeedService } from '../my-feed/my-feed.service';\r\nimport { LinkifyPipe } from '../pipes/linkify-pipe';\r\n\r\n//https://stackoverflow.com/questions/41433766/directive-doesnt-work-in-a-sub-module\r\n//https://stackoverflow.com/questions/45032043/uncaught-error-unexpected-module-formsmodule-declared-by-the-module-appmodul/45032201\r\n\r\n@NgModule({\r\n  imports:      [\r\n    CommonModule, \r\n    NgxSpinnerModule,\r\n    NgMaterialModule    \r\n  ],\r\n  declarations: [\r\n    AutofocusDirective,\r\n    LinkifyPipe,\r\n    MyFeedComponent\r\n  ],\r\n  exports:      [\r\n    NgxSpinnerModule, \r\n    AutofocusDirective, \r\n    MyFeedComponent, \r\n    LinkifyPipe\r\n  ],\r\n  providers:    [MyFeedService]\r\n})\r\nexport class SharedModule { }","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  name: string;\r\n  isAuthenticated: boolean;\r\n  subscription:Subscription;\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\r\n    this.name = this.authService.name;\r\n  } \r\n\r\n   async signout() {\r\n    await this.authService.signout();     \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component is destroyed\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<header> \r\n  <div class=\"navbar navbar-dark bg-dark box-shadow\">\r\n    <div class=\"container d-flex justify-content-between\">\r\n      <a routerLink=\"/\" class=\"navbar-brand d-flex align-items-center\">\r\n        <strong>OAuth Client</strong>\r\n      </a>\r\n      <nav *ngIf=\"!isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n         <a class=\"p-2 text-light\" routerLink=\"/register\">Signup</a> \r\n         <a class=\"p-2 text-light\" routerLink=\"/login\">Login</a>     \r\n      </nav>\r\n      <nav *ngIf=\"isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n         <a class=\"p-2 text-light\" routerLink=\"/topsecret\">Top Secret Area</a>  \r\n         <a class=\"p-2 text-light\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout {{name}}</a>               \r\n      </nav>\r\n    </div>    \r\n  </div>\r\n</header>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<main role=\"main\">\r\n<div class=\"container\"> \r\n  <router-outlet></router-outlet>\r\n</div>\r\n</main>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ShellComponent } from './shell.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [ShellComponent,HeaderComponent]\r\n})\r\nexport class ShellModule { }\r\n","import { Routes, Route } from '@angular/router';\r\nimport { ShellComponent } from './shell.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Provides helper methods to create routes.\r\n */\r\nexport class Shell {\r\n\r\n  /**\r\n   * Creates routes using the shell component and authentication.\r\n   * @param routes The routes to add.\r\n   * @return {Route} The new route using shell as the base.\r\n   */\r\n  static childRoutes(routes: Routes): Route {\r\n    return {\r\n      path: '',\r\n      component: ShellComponent,\r\n      children: routes,\r\n      // =canActivate: [AuthenticationGuard],\r\n      // Reuse ShellComponent instance when navigating between child views\r\n      data: { reuse: true }\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stock',\r\n  templateUrl: './stock.component.html',\r\n  styleUrls: ['./stock.component.css']\r\n})\r\nexport class StockComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>stock works!</p>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatButtonToggle } from '@angular/material/button-toggle';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-submit-post-form',\r\n  templateUrl: './submit-post-form.component.html',\r\n  styleUrls: ['./submit-post-form.component.css']\r\n})\r\nexport class SubmitPostFormComponent implements OnInit {\r\n\r\n  // bullBearIndicator: number;\r\n  isBearish: boolean = false;\r\n  isBullish: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.bullBearIndicator);\r\n  }\r\n\r\n  bearishClick() {\r\n    this.isBearish = !this.isBearish;\r\n    this.isBullish = false;\r\n    console.log(this.isBearish);\r\n  }\r\n\r\n  bullishClick() {\r\n    this.isBullish = !this.isBullish;\r\n    this.isBearish = false;\r\n  }\r\n}\r\n","<mat-card>\r\n\r\n    <mat-card-content>\r\n    <form class=\"tiririt-form\">\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Say something about your favorite stock</mat-label>\r\n            <textarea matInput placeholder=\"Ex. @supertrader @bulltactics $GLO did very well last quarter. #panalo\" \r\n                maxlength=\"300\"></textarea>\r\n        </mat-form-field>\r\n    </form>    \r\n<!-- <mat-card-actions> -->\r\n    <div class=\"post-action-container\">\r\n        <div class=\"post-bear-bull\">\r\n            <button mat-stroked-button color=\"basic\" (click)=\"bearishClick()\" [class.isBearish]=\"isBearish\">\r\n                Bearish</button>\r\n            <button mat-stroked-button color=\"basic\" (click)=\"bullishClick()\" [class.isBullish]=\"isBullish\">                \r\n                Bullish</button>\r\n\r\n        </div>\r\n        <div class=\"post-buttons\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"submit()\">Post</button>\r\n        </div>\r\n    </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card-actions>     -->\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tag works!</p>\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { finalize } from 'rxjs/operators'\nimport { AuthService } from '../../core/authentication/auth.service';\nimport { TopSecretService } from '../top-secret.service';\n\n@Component({\n  selector: 'top-secret-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  claims=null;\n  busy: boolean;\n\n  constructor(private authService: AuthService, private topSecretService: TopSecretService, private spinner: NgxSpinnerService) {\n  }\n\n  ngOnInit() {    \n    this.busy = true;\n    this.spinner.show();\n    this.topSecretService.fetchTopSecretData(this.authService.authorizationHeaderValue)\n    .pipe(finalize(() => {\n      this.spinner.hide();\n      this.busy = false;\n    })).subscribe(\n    result => {         \n      this.claims = result;\n   });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div *ngIf=\"!busy\" class=\"col-md-8\">\n          <h3>Super-secret user claims sent from the server!</h3>\n            <table class=\"table small\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Value</th>                \n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let claim of claims; let i = index\" [attr.data-index]=\"i\">\n                    <th scope=\"row\">{{i}}</th>\n                    <td>{{claim.type}}</td>\n                    <td>{{claim.value}}</td>                   \n                  </tr>                 \n                </tbody>\n              </table>            \n        </div>\n    </div>\n    <ngx-spinner></ngx-spinner>  \n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexComponent } from './index/index.component';\nimport { TopSecretService } from './top-secret.service';\nimport { TopSecretRoutingModule } from './top-secret.routing-module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [IndexComponent],\n  providers: [ TopSecretService ],\n  imports: [\n    CommonModule,\n    TopSecretRoutingModule,\n    SharedModule\n  ]\n})\nexport class TopSecretModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Shell } from './../shell/shell.service';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { AuthGuard } from '../core/authentication/auth.guard';\r\n\r\nconst routes: Routes = [\r\nShell.childRoutes([\r\n    { path: 'topsecret', component: IndexComponent, canActivate: [AuthGuard] }       \r\n  ])\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class TopSecretRoutingModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConfigService } from '../shared/config.service';\n\nimport { BaseService } from '../shared/base.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopSecretService extends BaseService {\n\n  constructor(private http: HttpClient, private configService: ConfigService) { \n    super();\n  }\n\n  fetchTopSecretData(token: string) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n\n    return this.http.get(this.configService.resourceApiURI + '/values', httpOptions)\n      .pipe(catchError(this.handleError));\n\n  }  \n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>user works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WatchlistService } from './watchlist.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { StockViewModel } from '../models/stock-view-model';\r\n\r\n@Component({\r\n  selector: 'app-watchlist',\r\n  templateUrl: './watchlist.component.html',\r\n  styleUrls: ['./watchlist.component.css']\r\n})\r\nexport class WatchlistComponent implements OnInit {\r\n\r\n  dataSource = new MatTableDataSource<StockViewModel>();\r\n  displayedColumns: string[] = ['symbol', 'price'];\r\n\r\n  constructor(\r\n    private watchListService: WatchlistService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.watchListService.getWatchList()\r\n      .subscribe(result => {\r\n        this.dataSource = new MatTableDataSource<StockViewModel>(result?.stocks);\r\n      }, error => console.error(error));\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"watchlist-container\"> -->\r\n    \r\n    <mat-form-field>\r\n        <input matInput placeholder=\"Enter symbol\">        \r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\">Add</button>    \r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef>Symbol</th>\r\n            <td mat-cell *matCellDef=\"let stock\">\r\n               <a [routerLink]=\"['/stock', stock.symbol]\">{{ stock.symbol }}</a>\r\n            </td>\r\n        </ng-container>        \r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef>Last Price</th>\r\n            <td mat-cell *matCellDef=\"let stock\">{{ stock.price }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n<!-- </div> -->\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WatchlistModel } from './watchlist-model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WatchlistService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string) { \r\n\r\n  }\r\n\r\n  getWatchList(): Observable<WatchlistModel> {\r\n    const url = 'https://localhost/tiririt/api/v1/WatchList';    \r\n    return this.http.get<WatchlistModel>(url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}