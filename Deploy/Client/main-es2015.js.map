{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api-authorization/api-authorization.constants.ts","./src/app/api-authorization/api-authorization.module.ts","./src/app/api-authorization/authorize.interceptor.ts","./src/app/api-authorization/authorize.service.ts","./src/app/api-authorization/login-menu/login-menu.component.ts","./src/app/api-authorization/login-menu/login-menu.component.html","./src/app/api-authorization/login/login.component.ts","./src/app/api-authorization/login/login.component.html","./src/app/api-authorization/logout/logout.component.ts","./src/app/api-authorization/logout/logout.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feed-container/feed-container.component.ts","./src/app/feed-container/feed-container.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/my-feed/my-feed.component.ts","./src/app/my-feed/my-feed.component.html","./src/app/my-feed/my-feed.service.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/news-feed/news-feed.component.ts","./src/app/news-feed/news-feed.component.html","./src/app/ngmaterial/ngmaterial.module.ts","./src/app/pipes/linkify-pipe.ts","./src/app/pipes/stirp-html-pipe.ts","./src/app/post-details/post-details.component.ts","./src/app/post-details/post-details.component.html","./src/app/stock/stock.component.ts","./src/app/stock/stock.component.html","./src/app/submit-post-form/submit-post-form.component.ts","./src/app/submit-post-form/submit-post-form.component.html","./src/app/tag/tag.component.ts","./src/app/tag/tag.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/watchlist/watchlist.component.ts","./src/app/watchlist/watchlist.component.html","./src/app/watchlist/watchlist.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export const ApplicationName = 'Tiririt';\r\n\r\nexport const ReturnUrlType = 'returnUrl';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: ReturnUrlType,\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nlet applicationPaths: ApplicationPathsType = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `https://localhost/tiriritapi/_configuration/${ApplicationName}`,\r\n  Login: `authentication/${LoginActions.Login}`,\r\n  LoginFailed: `authentication/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `authentication/${LoginActions.LoginCallback}`,\r\n  Register: `authentication/${LoginActions.Register}`,\r\n  Profile: `authentication/${LoginActions.Profile}`,\r\n  LogOut: `authentication/${LogoutActions.Logout}`,\r\n  LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\r\n  LoginPathComponents: [],\r\n  LoginFailedPathComponents: [],\r\n  LoginCallbackPathComponents: [],\r\n  RegisterPathComponents: [],\r\n  ProfilePathComponents: [],\r\n  LogOutPathComponents: [],\r\n  LoggedOutPathComponents: [],\r\n  LogOutCallbackPathComponents: [],\r\n  IdentityRegisterPath: 'https://localhost/tiriritapi/Identity/Account/Register',\r\n  IdentityManagePath: 'https://localhost/tiriritapi/Identity/Account/Manage'\r\n};\r\n\r\napplicationPaths = {\r\n  ...applicationPaths,\r\n  LoginPathComponents: applicationPaths.Login.split('/'),\r\n  LoginFailedPathComponents: applicationPaths.LoginFailed.split('/'),\r\n  RegisterPathComponents: applicationPaths.Register.split('/'),\r\n  ProfilePathComponents: applicationPaths.Profile.split('/'),\r\n  LogOutPathComponents: applicationPaths.LogOut.split('/'),\r\n  LoggedOutPathComponents: applicationPaths.LoggedOut.split('/'),\r\n  LogOutCallbackPathComponents: applicationPaths.LogOutCallback.split('/')\r\n};\r\n\r\ninterface ApplicationPathsType {\r\n  readonly DefaultLoginRedirectPath: string;\r\n  readonly ApiAuthorizationClientConfigurationUrl: string;\r\n  readonly Login: string;\r\n  readonly LoginFailed: string;\r\n  readonly LoginCallback: string;\r\n  readonly Register: string;\r\n  readonly Profile: string;\r\n  readonly LogOut: string;\r\n  readonly LoggedOut: string;\r\n  readonly LogOutCallback: string;\r\n  readonly LoginPathComponents: string [];\r\n  readonly LoginFailedPathComponents: string [];\r\n  readonly LoginCallbackPathComponents: string [];\r\n  readonly RegisterPathComponents: string [];\r\n  readonly ProfilePathComponents: string [];\r\n  readonly LogOutPathComponents: string [];\r\n  readonly LoggedOutPathComponents: string [];\r\n  readonly LogOutCallbackPathComponents: string [];\r\n  readonly IdentityRegisterPath: string;\r\n  readonly IdentityManagePath: string;\r\n}\r\n\r\nexport const ApplicationPaths: ApplicationPathsType = applicationPaths;\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginMenuComponent } from './login-menu/login-menu.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApplicationPaths } from './api-authorization.constants';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(\r\n      [\r\n        { path: ApplicationPaths.Register, component: LoginComponent },\r\n        { path: ApplicationPaths.Profile, component: LoginComponent },\r\n        { path: ApplicationPaths.Login, component: LoginComponent },\r\n        { path: ApplicationPaths.LoginFailed, component: LoginComponent },\r\n        { path: ApplicationPaths.LoginCallback, component: LoginComponent },\r\n        { path: ApplicationPaths.LogOut, component: LogoutComponent },\r\n        { path: ApplicationPaths.LoggedOut, component: LogoutComponent },\r\n        { path: ApplicationPaths.LogOutCallback, component: LogoutComponent }\r\n      ]\r\n    )\r\n  ],\r\n  declarations: [LoginMenuComponent, LoginComponent, LogoutComponent],\r\n  exports: [LoginMenuComponent, LoginComponent, LogoutComponent]\r\n})\r\nexport class ApiAuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthorizeService } from './authorize.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n  constructor(private authorize: AuthorizeService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.authorize.getAccessToken()\r\n      .pipe(mergeMap(token => this.processRequestWithToken(token, req, next)));\r\n  }\r\n\r\n  // Checks if there is an access_token available in the authorize service\r\n  // and adds it to the request in case it's targeted at the same origin as the\r\n  // single page application.\r\n  private processRequestWithToken(token: string, req: HttpRequest<any>, next: HttpHandler) {\r\n    if (!!token && this.isSameOriginUrl(req)) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n\r\n  private isSameOriginUrl(req: any) {\r\n    // It's an absolute url with the same origin.\r\n    if (req.url.startsWith(`${window.location.origin}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a protocol relative url with the same origin.\r\n    // For example: //www.example.com/api/Products\r\n    if (req.url.startsWith(`//${window.location.host}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a relative url like /api/Products\r\n    if (/^\\/[^\\/].*/.test(req.url)) {\r\n      return true;\r\n    }\r\n\r\n    // It's an absolute or protocol relative url that\r\n    // doesn't have the same origin.\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\r\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\r\nimport { ApplicationPaths, ApplicationName } from './api-authorization.constants';\r\n\r\nexport type IAuthenticationResult =\r\n  SuccessAuthenticationResult |\r\n  FailureAuthenticationResult |\r\n  RedirectAuthenticationResult;\r\n\r\nexport interface SuccessAuthenticationResult {\r\n  status: AuthenticationResultStatus.Success;\r\n  state: any;\r\n}\r\n\r\nexport interface FailureAuthenticationResult {\r\n  status: AuthenticationResultStatus.Fail;\r\n  message: string;\r\n}\r\n\r\nexport interface RedirectAuthenticationResult {\r\n  status: AuthenticationResultStatus.Redirect;\r\n}\r\n\r\nexport enum AuthenticationResultStatus {\r\n  Success,\r\n  Redirect,\r\n  Fail\r\n}\r\n\r\nexport interface IUser {\r\n  name?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeService {\r\n  // By default pop ups are disabled because they don't work properly on Edge.\r\n  // If you want to enable pop up authentication simply set this flag to false.\r\n\r\n  private popUpDisabled = true;\r\n  private userManager: UserManager;\r\n  private userSubject: BehaviorSubject<IUser | null> = new BehaviorSubject(null);\r\n\r\n  public isAuthenticated(): Observable<boolean> {\r\n    return this.getUser().pipe(map(u => !!u));\r\n  }\r\n\r\n  public getUser(): Observable<IUser | null> {\r\n    return concat(\r\n      this.userSubject.pipe(take(1), filter(u => !!u)),\r\n      this.getUserFromStorage().pipe(filter(u => !!u), tap(u => this.userSubject.next(u))),\r\n      this.userSubject.asObservable());\r\n  }\r\n\r\n  public getAccessToken(): Observable<string> {\r\n    return from(this.ensureUserManagerInitialized())\r\n      .pipe(mergeMap(() => from(this.userManager.getUser())),\r\n        map(user => user && user.access_token));\r\n  }\r\n\r\n  // We try to authenticate the user in three different ways:\r\n  // 1) We try to see if we can authenticate the user silently. This happens\r\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n  //    on the client.\r\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n  //    Pop-Up blocker or the user has disabled PopUps.\r\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n  //    redirect flow.\r\n  public async signIn(state: any): Promise<IAuthenticationResult> {\r\n    await this.ensureUserManagerInitialized();\r\n    let user: User = null;\r\n    try {\r\n      user = await this.userManager.signinSilent(this.createArguments());\r\n      this.userSubject.next(user.profile);\r\n      return this.success(state);\r\n    } catch (silentError) {\r\n      // User might not be authenticated, fallback to popup authentication\r\n      console.log('Silent authentication error: ', silentError);\r\n\r\n      try {\r\n        if (this.popUpDisabled) {\r\n          throw new Error('Popup disabled. Change \\'authorize.service.ts:AuthorizeService.popupDisabled\\' to false to enable it.');\r\n        }\r\n        user = await this.userManager.signinPopup(this.createArguments());\r\n        this.userSubject.next(user.profile);\r\n        return this.success(state);\r\n      } catch (popupError) {\r\n        if (popupError.message === 'Popup window closed') {\r\n          // The user explicitly cancelled the login action by closing an opened popup.\r\n          return this.error('The user closed the window.');\r\n        } else if (!this.popUpDisabled) {\r\n          console.log('Popup authentication error: ', popupError);\r\n        }\r\n\r\n        // PopUps might be blocked by the user, fallback to redirect\r\n        try {\r\n          await this.userManager.signinRedirect(this.createArguments(state));\r\n          return this.redirect();\r\n        } catch (redirectError) {\r\n          console.log('Redirect authentication error: ', redirectError);\r\n          return this.error(redirectError);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async completeSignIn(url: string): Promise<IAuthenticationResult> {\r\n    try {\r\n      await this.ensureUserManagerInitialized();\r\n      const user = await this.userManager.signinCallback(url);\r\n      this.userSubject.next(user && user.profile);\r\n      return this.success(user && user.state);\r\n    } catch (error) {\r\n      console.log('There was an error signing in: ', error);\r\n      return this.error('There was an error signing in.');\r\n    }\r\n  }\r\n\r\n  public async signOut(state: any): Promise<IAuthenticationResult> {\r\n    try {\r\n      if (this.popUpDisabled) {\r\n        throw new Error('Popup disabled. Change \\'authorize.service.ts:AuthorizeService.popupDisabled\\' to false to enable it.');\r\n      }\r\n\r\n      await this.ensureUserManagerInitialized();\r\n      await this.userManager.signoutPopup(this.createArguments());\r\n      this.userSubject.next(null);\r\n      return this.success(state);\r\n    } catch (popupSignOutError) {\r\n      console.log('Popup signout error: ', popupSignOutError);\r\n      try {\r\n        await this.userManager.signoutRedirect(this.createArguments(state));\r\n        return this.redirect();\r\n      } catch (redirectSignOutError) {\r\n        console.log('Redirect signout error: ', popupSignOutError);\r\n        return this.error(redirectSignOutError);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async completeSignOut(url: string): Promise<IAuthenticationResult> {\r\n    await this.ensureUserManagerInitialized();\r\n    try {\r\n      const response = await this.userManager.signoutCallback(url);\r\n      this.userSubject.next(null);\r\n      return this.success(response && response.state);\r\n    } catch (error) {\r\n      console.log(`There was an error trying to log out '${error}'.`);\r\n      return this.error(error);\r\n    }\r\n  }\r\n\r\n  private createArguments(state?: any): any {\r\n    return { useReplaceToNavigate: true, data: state };\r\n  }\r\n\r\n  private error(message: string): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Fail, message };\r\n  }\r\n\r\n  private success(state: any): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Success, state };\r\n  }\r\n\r\n  private redirect(): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Redirect };\r\n  }\r\n\r\n  private async ensureUserManagerInitialized(): Promise<void> {\r\n    if (this.userManager !== undefined) {\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n    if (!response.ok) {\r\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n    }\r\n\r\n    const settings: any = await response.json();\r\n    settings.automaticSilentRenew = true;\r\n    settings.includeIdTokenInSilentRenew = true;\r\n    this.userManager = new UserManager(settings);\r\n\r\n    this.userManager.events.addUserSignedOut(async () => {\r\n      await this.userManager.removeUser();\r\n      this.userSubject.next(null);\r\n    });\r\n  }\r\n\r\n  private getUserFromStorage(): Observable<IUser> {\r\n    return from(this.ensureUserManagerInitialized())\r\n      .pipe(\r\n        mergeMap(() => this.userManager.getUser()),\r\n        map(u => u && u.profile));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizeService } from '../authorize.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login-menu',\r\n  templateUrl: './login-menu.component.html',\r\n  styleUrls: ['./login-menu.component.css']\r\n})\r\nexport class LoginMenuComponent implements OnInit {\r\n  public isAuthenticated: Observable<boolean>;\r\n  public userName: Observable<string>;\r\n\r\n  constructor(private authorizeService: AuthorizeService) { }\r\n\r\n  ngOnInit() {\r\n    this.isAuthenticated = this.authorizeService.isAuthenticated();\r\n    this.userName = this.authorizeService.getUser().pipe(map(u => u && u.name));\r\n  }\r\n}\r\n","<ul class=\"navbar-nav\" *ngIf=\"isAuthenticated | async\">\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/profile\"]' title=\"Manage\">Hello {{ userName | async }}</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/logout\"]' [state]='{ local: true }' title=\"Logout\">Logout</a>\r\n    </li>\r\n</ul>\r\n<ul class=\"navbar-nav\" *ngIf=\"!(isAuthenticated | async)\">\r\n  <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/register\"]'>Register</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/login\"]'>Login</a>\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizeService, AuthenticationResultStatus } from '../authorize.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public message = new BehaviorSubject<string>(null);\r\n\r\n  constructor(\r\n    private authorizeService: AuthorizeService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n    const action = this.activatedRoute.snapshot.url[1];\r\n    switch (action.path) {\r\n      case LoginActions.Login:\r\n        await this.login(this.getReturnUrl());\r\n        break;\r\n      case LoginActions.LoginCallback:\r\n        await this.processLoginCallback();\r\n        break;\r\n      case LoginActions.LoginFailed:\r\n        const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\r\n        this.message.next(message);\r\n        break;\r\n      case LoginActions.Profile:\r\n        this.redirectToProfile();\r\n        break;\r\n      case LoginActions.Register:\r\n        this.redirectToRegister();\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid action '${action}'`);\r\n    }\r\n  }\r\n\r\n\r\n  private async login(returnUrl: string): Promise<void> {\r\n    const state: INavigationState = { returnUrl };\r\n    const result = await this.authorizeService.signIn(state);\r\n    this.message.next(undefined);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        break;\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(returnUrl);\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\r\n          queryParams: { [QueryParameterNames.Message]: result.message }\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid status result ${(result as any).status}.`);\r\n    }\r\n  }\r\n\r\n  private async processLoginCallback(): Promise<void> {\r\n    const url = window.location.href;\r\n    const result = await this.authorizeService.completeSignIn(url);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        // There should not be any redirects as completeSignIn never redirects.\r\n        throw new Error('Should not redirect.');\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        this.message.next(result.message);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private redirectToRegister(): any {\r\n    this.redirectToApiAuthorizationPath(\r\n      `${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\r\n  }\r\n\r\n  private redirectToProfile(): void {\r\n    this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n  }\r\n\r\n  private async navigateToReturnUrl(returnUrl: string) {\r\n    // It's important that we do a replace here so that we remove the callback uri with the\r\n    // fragment containing the tokens from the browser history.\r\n    await this.router.navigateByUrl(returnUrl, {\r\n      replaceUrl: true\r\n    });\r\n  }\r\n\r\n  private getReturnUrl(state?: INavigationState): string {\r\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\r\n    // If the url is comming from the query string, check that is either\r\n    // a relative url or an absolute url\r\n    if (fromQuery &&\r\n      !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n        /\\/[^\\/].*/.test(fromQuery))) {\r\n      // This is an extra check to prevent open redirects.\r\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n    }\r\n    return (state && state.returnUrl) ||\r\n      fromQuery ||\r\n      ApplicationPaths.DefaultLoginRedirectPath;\r\n  }\r\n\r\n  private redirectToApiAuthorizationPath(apiAuthorizationPath: string) {\r\n    // It's important that we do a replace here so that when the user hits the back arrow on the\r\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\r\n    // component.\r\n    //const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n    const redirectUrl = apiAuthorizationPath;\r\n    window.location.replace(redirectUrl);\r\n  }\r\n}\r\n\r\ninterface INavigationState {\r\n  [ReturnUrlType]: string;\r\n}\r\n","<p>{{ message | async }}</p>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationResultStatus, AuthorizeService } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  public message = new BehaviorSubject<string>(null);\r\n\r\n  constructor(\r\n    private authorizeService: AuthorizeService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n    const action = this.activatedRoute.snapshot.url[1];\r\n    switch (action.path) {\r\n      case LogoutActions.Logout:\r\n        if (!!window.history.state.local) {\r\n          await this.logout(this.getReturnUrl());\r\n        } else {\r\n          // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n          this.message.next('The logout was not initiated from within the page.');\r\n        }\r\n\r\n        break;\r\n      case LogoutActions.LogoutCallback:\r\n        await this.processLogoutCallback();\r\n        break;\r\n      case LogoutActions.LoggedOut:\r\n        this.message.next('You successfully logged out!');\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid action '${action}'`);\r\n    }\r\n  }\r\n\r\n  private async logout(returnUrl: string): Promise<void> {\r\n    const state: INavigationState = { returnUrl };\r\n    const isauthenticated = await this.authorizeService.isAuthenticated().pipe(\r\n      take(1)\r\n    ).toPromise();\r\n    if (isauthenticated) {\r\n      const result = await this.authorizeService.signOut(state);\r\n      switch (result.status) {\r\n        case AuthenticationResultStatus.Redirect:\r\n          break;\r\n        case AuthenticationResultStatus.Success:\r\n          await this.navigateToReturnUrl(returnUrl);\r\n          break;\r\n        case AuthenticationResultStatus.Fail:\r\n          this.message.next(result.message);\r\n          break;\r\n        default:\r\n          throw new Error('Invalid authentication result status.');\r\n      }\r\n    } else {\r\n      this.message.next('You successfully logged out!');\r\n    }\r\n  }\r\n\r\n  private async processLogoutCallback(): Promise<void> {\r\n    const url = window.location.href;\r\n    const result = await this.authorizeService.completeSignOut(url);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        // There should not be any redirects as the only time completeAuthentication finishes\r\n        // is when we are doing a redirect sign in flow.\r\n        throw new Error('Should not redirect.');\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        this.message.next(result.message);\r\n        break;\r\n      default:\r\n        throw new Error('Invalid authentication result status.');\r\n    }\r\n  }\r\n\r\n  private async navigateToReturnUrl(returnUrl: string) {\r\n    await this.router.navigateByUrl(returnUrl, {\r\n      replaceUrl: true\r\n    });\r\n  }\r\n\r\n  private getReturnUrl(state?: INavigationState): string {\r\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\r\n    // If the url is comming from the query string, check that is either\r\n    // a relative url or an absolute url\r\n    if (fromQuery &&\r\n      !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n        /\\/[^\\/].*/.test(fromQuery))) {\r\n      // This is an extra check to prevent open redirects.\r\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n    }\r\n    return (state && state.returnUrl) ||\r\n      fromQuery ||\r\n      ApplicationPaths.LoggedOut;\r\n  }\r\n}\r\n\r\ninterface INavigationState {\r\n  [ReturnUrlType]: string;\r\n}\r\n","<p>{{ message | async }}</p>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'post/:postId', component: PostDetailsComponent },\r\n  { path: 'stock/:symbol', component: StockComponent },\r\n  { path: 'user/:username', component: UserComponent },\r\n  { path: 'tag/:tag', component: TagComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Client';\r\n\r\n  constructor(private iconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) {\r\n      this.iconRegistry.addSvgIcon('bearish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bear.svg'));\r\n      this.iconRegistry.addSvgIcon('bullish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bull-face.svg'));\r\n      this.iconRegistry.addSvgIcon('like', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/like.svg'));\r\n  }\r\n}\r\n\r\n\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgMaterialModule } from './ngmaterial/ngmaterial.module';\r\nimport { WatchlistComponent } from './watchlist/watchlist.component';\r\nimport { WatchlistService } from './watchlist/watchlist.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SubmitPostFormComponent } from './submit-post-form/submit-post-form.component';\r\nimport { FeedContainerComponent } from './feed-container/feed-container.component';\r\nimport { MyFeedComponent } from './my-feed/my-feed.component';\r\nimport { MyFeedService } from './my-feed/my-feed.service';\r\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\r\nimport { LinkifyPipe } from './pipes/linkify-pipe';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { StripHtmlPipe } from './pipes/stirp-html-pipe';\r\nimport { ApiAuthorizationModule } from './api-authorization/api-authorization.module';\r\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    WatchlistComponent,\r\n    SubmitPostFormComponent,\r\n    FeedContainerComponent,\r\n    MyFeedComponent,\r\n    NewsFeedComponent,\r\n    LinkifyPipe,\r\n    StripHtmlPipe,\r\n    PostDetailsComponent,\r\n    StockComponent,\r\n    UserComponent,\r\n    TagComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ApiAuthorizationModule,    \r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NgMaterialModule\r\n  ],\r\n  providers: [\r\n    WatchlistService, \r\n    MyFeedService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthorizeInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feed-container',\n  templateUrl: './feed-container.component.html',\n  styleUrls: ['./feed-container.component.css']\n})\nexport class FeedContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" backgroundColor=\"primary\" color=\"accent\">\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <mat-icon>chat_bubble_outline</mat-icon>\n            My Feed\n        </ng-template>\n        <app-my-feed></app-my-feed>\n    </mat-tab>\n    <mat-tab label=\"Trending\">\n        <ng-template mat-tab-label>\n            <mat-icon>trending_up</mat-icon>\n            Trending\n        </ng-template>\n        Content 3</mat-tab>\n    <mat-tab label=\"News\">\n        <ng-template mat-tab-label>\n            <mat-icon>rss_feed</mat-icon>\n            News\n        </ng-template>\n        <app-news-feed></app-news-feed>\n    </mat-tab>\n    \n</mat-tab-group>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n","\r\n    <div class=\"flexbox-container\">\r\n        <div class=\"flexbox-item side-navigation\">\r\n            <app-watchlist></app-watchlist>\r\n        </div>\r\n        <div class=\"flexbox-item main-content\">\r\n            <div class=\"flex-main-content\">\r\n                <div class=\"flex-main-content-item1\">\r\n                    <app-submit-post-form></app-submit-post-form>\r\n                </div>\r\n                <div class=\"flex-main-content-item2\">\r\n                    <app-feed-container></app-feed-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n","import { Component, OnInit } from '@angular/core';\nimport { MyFeedService } from './my-feed.service';\nimport { PostModel } from './post-model';\n\n@Component({\n  selector: 'app-my-feed',\n  templateUrl: './my-feed.component.html',\n  styleUrls: ['./my-feed.component.css']\n})\nexport class MyFeedComponent implements OnInit {\n\n  myFeed: PostModel[];\n\n  constructor(private myFeedService: MyFeedService) { }\n\n  ngOnInit(): void {\n    this.myFeedService.getMyFeed()\n      .subscribe(result => {\n        this.myFeed = result;\n        console.log(this.myFeed);\n      }, error => console.error(error));\n  }\n\n  goToPost() {\n    console.log('hello');\n  }\n\n}\n","<div class=\"feed-filter\">\n<mat-button-toggle-group appearance=\"legacy\">\n    <mat-button-toggle checked>All</mat-button-toggle>\n    <mat-button-toggle>Mentions</mat-button-toggle>\n    <mat-button-toggle>Watch List</mat-button-toggle>\n    <mat-button-toggle>Subscription</mat-button-toggle>\n</mat-button-toggle-group>\n</div>\n\n<div *ngFor=\"let post of myFeed\">    \n<mat-card [routerLink]=\"['/post', post.postId]\">\n    <mat-card-header>     \n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-subtitle>\n            <div>\n            {{ post.userName }}   <br>\n            Posted {{ post.postDate }}\n            </div>            \n            \n        </mat-card-subtitle>\n        <!-- <div class=\"bearbullindicator\">            \n            <mat-icon svgIcon=\"bullish\" *ngIf=\"post.bullBearLevel == 'VeryBullish'\"></mat-icon>\n            <mat-icon svgIcon=\"bearish\" *ngIf=\"post.bullBearLevel == 'VeryBearish'\"></mat-icon>\n        </div> -->\n        <div class=\"bearbullindicator\">\n            <div class=\"bearbullindicator1 bullish\"  *ngIf=\"post.bullBearLevel == 'VeryBullish'\">Bullish</div>\n            <div class=\"bearbullindicator1 bearish\"  *ngIf=\"post.bullBearLevel == 'VeryBearish'\">Bearish</div>\n        </div>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <p [innerHTML]=\"post.postText | linkify\"></p>\n    </mat-card-content>\n\n    <mat-card-actions>\n        <button mat-icon-button >\n            <mat-icon class=\"icon-display\">reply</mat-icon>\n        </button>\n        <button mat-icon-button >\n            <mat-icon class=\"icon-display\">format_quote</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.responseCount > 0\"></span>\n                <mat-icon class=\"icon-display\">mode_comment</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.likeCount > 0\"></span>\n                <!-- <img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                 -->\n                <mat-icon svgIcon=\"like\" class=\"icon-display\"></mat-icon>\n        </button>\n        <!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n                <img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\n        </button> -->\n        \n    </mat-card-actions>\n</mat-card>\n<mat-divider></mat-divider>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostModel } from './post-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyFeedService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getMyFeed(): Observable<PostModel[]> {\n    const url = './assets/myfeed.json';\n    return this.http.get<PostModel[]>(url);\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-nav-menu',\r\n    templateUrl: './nav-menu.component.html',\r\n    styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent \r\n{\r\n    isExpanded = false;\r\n\r\n    collapse() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n}\r\n","<header>\r\n    <nav\r\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n    >\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\"><img alt=\"Titos & Titas of Finance Logo\" src=\"./assets/TandT-150x83-logo.png\" /></a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\".navbar-collapse\"\r\n          aria-label=\"Toggle navigation\"\r\n          [attr.aria-expanded]=\"isExpanded\"\r\n          (click)=\"toggle()\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n          [ngClass]=\"{ show: isExpanded }\"\r\n        >\r\n\r\n          <app-login-menu></app-login-menu>\r\n          <ul class=\"navbar-nav flex-grow\">\r\n            <li\r\n              class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n            >\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n            </li>\r\n  \r\n            <!-- <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/cities']\">Cities</a>\r\n            </li>\r\n            <li class=\"nav-item\" [routerLinkActive]=\"['/countries']\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/countries']\">Countries</a>\r\n            </li> -->\r\n          </ul>\r\n\r\n          <div class=\"searchFormField\">\r\n            <mat-form-field>\r\n              <input matInput id=\"searchBox\" placeholder=\"Search\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NewsRss } from './news-rss';\n// import * as xml2js from \"xml2js\";\n// import { NewsRss } from './news-rss';\n\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.css']\n})\nexport class NewsFeedComponent implements OnInit {\n\n  rssData: NewsRss;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getRssFeedData();\n  }\n\n  getRssFeedData() {\n  \n    this.http\n      .get<NewsRss>(\"./assets/news-feed.json\")\n      .subscribe(data => {          \n        this.rssData = data;\n        // if (this.rssData) {\n        //   for(let i = 0; i < this.rssData.rss.channel.item.length; i++) {\n        //     this.rssData.rss.channel.item[i].description = this.rssData.rss.channel.item[i].description.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\n        //   }\n        // }\n        console.log(this.rssData.rss.channel);\n      });\n  }\n\n}\n","<!-- <ul>\n\t<li *ngFor=\"let o of rssData?.rss.channel.item\">\n\t\t<a href=\"{{ o.link }}\">{{ o.title }}</a>\n\t</li>\n</ul> -->\n\n<div *ngFor=\"let rss of rssData?.rss.channel.item\">    \n\t<mat-card>\n\t\t<mat-card-header>     \n\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\n\t\t\t<mat-card-subtitle>\n\t\t\t\t<div>\n\t\t\t\t<a href=\"https://investing.einnews.com/news/philippine-stock-exchange\">EIN News</a>   <br>\n\t\t\t\tPosted {{ rss.pubDate }}\n\t\t\t\t</div>            \n\t\t\t</mat-card-subtitle>\t\n\t\t</mat-card-header>\n\t\t\n\t\t<mat-card-content>\n\t\t\t<a href=\"{{ rss.link }}\"><p>{{ rss.title }}</p></a>\n\t\t\t\n\t\t\t{{ rss.description | striphtml }}\n\t\t</mat-card-content>\n\t\n\t\t<mat-card-actions>\t\t\t\n\t\t\t<button mat-icon-button >\n\t\t\t\t<mat-icon class=\"icon-display\">format_quote</mat-icon>\n\t\t\t</button>\n\t\t\t<!-- <button mat-icon-button>\n\t\t\t\t<span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\n\t\t\t\t\t<mat-icon>mode_comment</mat-icon>\n\t\t\t</button>\n\t\t\t<button mat-icon-button>\n\t\t\t\t<span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                \n\t\t\t</button> -->\n\t\t\t<!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\n\t\t\t</button> -->\n\t\t\t\n\t\t</mat-card-actions>\n\t</mat-card>\n\t<mat-divider></mat-divider>\n\t</div>","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatBadgeModule\n  ],  \n  exports: [\n    // CommonModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatBadgeModule\n  ]\n})\nexport class NgMaterialModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n    name: \"linkify\"\n})\nexport class LinkifyPipe implements PipeTransform{\n    constructor(private domSanitizer: DomSanitizer) {\n\n    }\n\n    transform(value: string, ...args: any[]): any {        \n        let result = value.replace(/[\\$|@|\\#][(\\^)a-zA-Z]+/g, (match) => {            \n            const linkParam = match.replace(/[\\$|@|\\#]/g, \"\");\n            const linkIndicator = match[0];\n            switch(linkIndicator)\n            {\n                case '$':\n                    return `<a href=\"/stock/${linkParam}\">${match}</a>`;\n                case '@':\n                    return `<a href=\"/user/${linkParam}\">${match}</a>`;\n                case '#':\n                    return `<a href=\"/tag/${linkParam}\">${match}</a>`;\n            } \n\n        });\n        return this.domSanitizer.bypassSecurityTrustHtml(result);        \n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'striphtml'\r\n})\r\nexport class StripHtmlPipe implements PipeTransform {\r\n    transform(value: string, ...args: any[]): any {\r\n        return value.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>post-details works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>stock works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatButtonToggle } from '@angular/material/button-toggle';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-submit-post-form',\n  templateUrl: './submit-post-form.component.html',\n  styleUrls: ['./submit-post-form.component.css']\n})\nexport class SubmitPostFormComponent implements OnInit {\n\n  // bullBearIndicator: number;\n  isBearish: boolean = false;\n  isBullish: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    // console.log(this.bullBearIndicator);\n  }\n\n  bearishClick() {\n    this.isBearish = !this.isBearish;\n    this.isBullish = false;\n    console.log(this.isBearish);\n  }\n\n  bullishClick() {\n    this.isBullish = !this.isBullish;\n    this.isBearish = false;\n  }\n}\n","<mat-card>\n\n    <mat-card-content>\n    <form class=\"tiririt-form\">\n        <mat-form-field class=\"form-field\">\n            <mat-label>Say something about your favorite stock</mat-label>\n            <textarea matInput placeholder=\"Ex. @supertrader @bulltactics $GLO did very well last quarter. #panalo\" \n                maxlength=\"300\"></textarea>\n        </mat-form-field>\n    </form>    \n<!-- <mat-card-actions> -->\n    <div class=\"post-action-container\">\n        <div class=\"post-bear-bull\">\n            <button mat-stroked-button color=\"basic\" (click)=\"bearishClick()\" [class.isBearish]=\"isBearish\">\n                Bearish</button>\n            <button mat-stroked-button color=\"basic\" (click)=\"bullishClick()\" [class.isBullish]=\"isBullish\">                \n                Bullish</button>\n\n        </div>\n        <div class=\"post-buttons\">\n            <button mat-raised-button color=\"primary\" (click)=\"submit()\">Post</button>\n        </div>\n    </div>\n</mat-card-content>\n\n<!-- </mat-card-actions>     -->\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.css']\n})\nexport class TagComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tag works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { WatchlistService } from './watchlist.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { StockViewModel } from '../models/stock-view-model';\n\n@Component({\n  selector: 'app-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css']\n})\nexport class WatchlistComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<StockViewModel>();\n  displayedColumns: string[] = ['symbol', 'price'];\n\n  constructor(\n    private watchListService: WatchlistService\n  ) { }\n\n  ngOnInit(): void {\n    this.watchListService.getWatchList()\n      .subscribe(result => {\n        this.dataSource = new MatTableDataSource<StockViewModel>(result.stocks);\n        console.log(result);\n      }, error => console.error(error));\n  }\n\n}\n","<!-- <div class=\"watchlist-container\"> -->\n    \n    <mat-form-field>\n        <input matInput placeholder=\"Enter symbol\">        \n    </mat-form-field>\n    <button mat-raised-button color=\"primary\">Add</button>    \n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"symbol\">\n            <th mat-header-cell *matHeaderCellDef>Symbol</th>\n            <td mat-cell *matCellDef=\"let stock\">\n               {{ stock.symbol }}\n            </td>\n        </ng-container>        \n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Last Price</th>\n            <td mat-cell *matCellDef=\"let stock\">{{ stock.symbol }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n<!-- </div> -->\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WatchlistModel } from './watchlist-model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(\n    private http: HttpClient,\n    @Inject('BASE_URL') private baseUrl: string) { \n\n  }\n\n  getWatchList(): Observable<WatchlistModel> {\n    const url = 'https://localhost:44303/api/v1/WatchList';    \n    return this.http.get<WatchlistModel>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}