{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.routing-module.ts","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-callback/auth-callback.component.html","webpack:///src/app/auth-callback/auth-callback.component.ts","webpack:///src/app/core/authentication/auth.guard.ts","webpack:///src/app/core/authentication/auth.service.ts","webpack:///src/app/feed-container/feed-container.component.ts","webpack:///src/app/feed-container/feed-container.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/my-feed/my-feed.component.ts","webpack:///src/app/my-feed/my-feed.component.html","webpack:///src/app/my-feed/my-feed.service.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/news-feed/news-feed.component.ts","webpack:///src/app/news-feed/news-feed.component.html","webpack:///src/app/ngmaterial/ngmaterial.module.ts","webpack:///src/app/pipes/linkify-pipe.ts","webpack:///src/app/pipes/stirp-html-pipe.ts","webpack:///src/app/post-details/post-details.component.ts","webpack:///src/app/post-details/post-details.component.html","webpack:///src/app/shared/base.service.ts","webpack:///src/app/shared/config.service.ts","webpack:///src/app/shared/directives/auto-focus.directive.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shell/header/header.component.html","webpack:///src/app/shell/header/header.component.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.module.ts","webpack:///src/app/shell/shell.service.ts","webpack:///src/app/stock/stock.component.ts","webpack:///src/app/stock/stock.component.html","webpack:///src/app/submit-post-form/submit-post-form.component.ts","webpack:///src/app/submit-post-form/submit-post-form.component.html","webpack:///src/app/tag/tag.component.ts","webpack:///src/app/tag/tag.component.html","webpack:///src/app/top-secret/index/index.component.ts","webpack:///src/app/top-secret/index/index.component.html","webpack:///src/app/top-secret/top-secret.module.ts","webpack:///src/app/top-secret/top-secret.routing-module.ts","webpack:///src/app/top-secret/top-secret.service.ts","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/watchlist/watchlist.component.ts","webpack:///src/app/watchlist/watchlist.component.html","webpack:///src/app/watchlist/watchlist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountModule","declarations","imports","providers","schemas","routes","childRoutes","path","component","AccountRoutingModule","forChild","LoginComponent","formBuilder","authService","spinner","loginForm","group","username","required","password","rememberMe","title","show","login","returnUrl","onSubmit","selector","templateUrl","styleUrls","RegisterComponent","submitted","registrationForm","userName","emailAddress","email","firstName","lastName","formValue","value","register","pipe","hide","subscribe","result","success","error","console","log","pathMatch","canActivate","AppRoutingModule","forRoot","AppComponent","iconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","AppModule","bootstrap","AuthCallbackComponent","router","route","snapshot","fragment","indexOf","completeAuthentication","navigate","AuthGuard","state","isAuthenticated","queryParams","redirect","url","replaceUrl","AuthService","http","configService","_authNavStatusSource","authNavStatus$","asObservable","manager","getClientSettings","getUser","user","next","signinRedirect","signinRedirectCallback","userRegistration","post","authApiURI","handleError","expired","signoutRedirect","token_type","access_token","profile","name","providedIn","authority","client_id","redirect_uri","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","loadUserInfo","automaticSilentRenew","client_secret","silent_redirect_uri","FeedContainerComponent","HomeComponent","MyFeedComponent","myFeedService","getMyFeed","myFeed","MyFeedService","get","NavMenuComponent","isExpanded","subscription","status","signout","unsubscribe","toggle","NewsFeedComponent","getRssFeedData","data","rssData","rss","channel","NgMaterialModule","LinkifyPipe","replace","match","linkParam","linkIndicator","bypassSecurityTrustHtml","StripHtmlPipe","PostDetailsComponent","BaseService","applicationError","headers","modelStateErrors","key","description","ConfigService","AutofocusDirective","el","setTimeout","nativeElement","focus","SharedModule","HeaderComponent","ShellComponent","ShellModule","Shell","children","reuse","StockComponent","SubmitPostFormComponent","isBearish","isBullish","bearishClick","bullishClick","submit","TagComponent","IndexComponent","topSecretService","claims","busy","fetchTopSecretData","authorizationHeaderValue","TopSecretModule","TopSecretRoutingModule","TopSecretService","token","httpOptions","resourceApiURI","UserComponent","WatchlistComponent","watchListService","dataSource","displayedColumns","getWatchList","stocks","WatchlistService","baseUrl","environment","production","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { AccountRoutingModule } from './account.routing-module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MyFeedService } from '../my-feed/my-feed.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent, \r\n    LoginComponent    \r\n  ],\r\n  imports: [\r\n    CommonModule,    \r\n    ReactiveFormsModule,\r\n    AccountRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [AuthService, MyFeedService],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { Shell } from './../shell/shell.service';\r\n\r\nconst routes: Routes = [\r\nShell.childRoutes([\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent }    \r\n  ])\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AccountRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit { \r\n\r\n  returnUrl: string;  \r\n  loginForm = this.formBuilder.group({\r\n    username: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n    rememberMe: [false]\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService, \r\n    private spinner: NgxSpinnerService) { }    \r\n  \r\n    title = \"Login\";\r\n    \r\n    login() {     \r\n      this.spinner.show();\r\n      this.authService.login();\r\n    }   \r\n\r\n    ngOnInit() {\r\n      this.returnUrl = \"http://localhost:4200/home\";\r\n    }\r\n\r\n    onSubmit() {\r\n      this.spinner.show();\r\n      //this.authService.login()      \r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"login-section\">\r\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\r\n            <div class=\"form-header\">\r\n                <h1>Welcome to Tiririt!</h1>\r\n            </div>\r\n            <input type=\"hidden\" id=\"returnUrl\" name=\"returnUrl\" value=\"{{ returnUrl }}\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\" required\r\n                    formControlName=\"username\" class=\"form-control\" autofocus>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" required\r\n                    formControlName=\"password\" class=\"form-control\" >\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\">                \r\n                <label for=\"rememberLogin\">Remember me</label>                    \r\n            </div>            \r\n        </form>\r\n\r\n        <a href=\"#\">Forgot password?</a>\r\n        <button class=\"btn btn-lg btn-primary\" [disabled]=\"!loginForm\">Sign In</button>\r\n        <ngx-spinner></ngx-spinner>        \r\n    </div>\r\n\r\n    <div class=\"welcome-section\">\r\n        <app-my-feed></app-my-feed>\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8 text-center\">\r\n        <h1 class=\"mt-5\">{{title}}</h1>\r\n        <p class=\"lead\">This step uses the <a href=\"http://docs.identityserver.io/en/latest/topics/grant_types.html#implicit\" target=\"_blank\">implicit flow type</a> and redirects to the IdentityServer instance to perform the authentication step.   Before you can login here, you must <a routerLink=\"/register\">register a new account</a>.</p>\r\n        <img src=\"assets/images/open-identity.png\" width=\"175\" class=\"mb-4\" />\r\n        <p>\r\n            <button class=\"btn btn-lg btn-primary\" (click)=\"login()\">Login with IdentityServer</button>\r\n        </p>     \r\n      </div>\r\n  </div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { finalize } from 'rxjs/operators'\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UserRegistration }    from '../../shared/models/user.registration';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  success: boolean;\r\n  error: string;\r\n  // userRegistration: UserRegistration = { userName: '', first: '', email: '', password: ''};\r\n  submitted: boolean = false;\r\n\r\n  registrationForm = this.formBuilder.group({\r\n    userName: ['', Validators.required],\r\n    emailAddress: ['', Validators.email],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  });  \r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService, \r\n    private spinner: NgxSpinnerService) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() { \r\n\r\n    this.spinner.show();\r\n\r\n    let formValue = this.registrationForm.value;\r\n\r\n    this.authService.register(formValue)\r\n      .pipe(finalize(() => {\r\n        this.spinner.hide();\r\n      }))  \r\n      .subscribe(\r\n        result => {         \r\n          if(result) {\r\n            this.success = true;\r\n          }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.error = error;       \r\n      });\r\n  }\r\n}","<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-4 text-center\">\r\n      <form *ngIf=\"!success\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"registrationForm\">\r\n        <img class=\"mb-4\" src=\"assets/images/angular_solidBlack.svg\" alt=\"\" width=\"125\" height=\"125\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"sr-only\">User Name</label>\r\n            <input type=\"text\" id=\"userName\" name=\"userName\" \r\n              formControlName=\"userName\" class=\"form-control\" placeholder=\"Your User Name\" required autoFocus>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"email\" class=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" \r\n              formControlName=\"emailAddress\" class=\"form-control\" placeholder=\"Email address\" email required>\r\n\r\n            <!-- <small [hidden]=\"emailAddress.valid || (emailAddress.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\"\r\n              class=\"form-control\" placeholder=\"Password\" aria-describedby=\"passwordHelp\" required>     \r\n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Min. 6 characters with at least one non alphanumeric character</small>\r\n        </div>   \r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\" class=\"sr-only\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" name=\"firstName\" \r\n            formControlName=\"firstName\" class=\"form-control\" placeholder=\"First Name\" required>\r\n\r\n          <!-- <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\" class=\"sr-only\">First Name</label>\r\n          <input type=\"text\" id=\"lastName\" name=\"lastName\" \r\n            formControlName=\"lastName\" class=\"form-control\" placeholder=\"Last Name\" required>\r\n\r\n          <!-- <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\r\n        </div>        \r\n\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"!registrationForm.valid\">Go</button>\r\n        <ngx-spinner></ngx-spinner>   \r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\" role=\"alert\">\r\n            <strong>Oops!</strong> {{error}}\r\n        </div>     \r\n      </form>      \r\n      <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\r\n          <h4 class=\"alert-heading\">Well done!</h4>\r\n          <p>Your account was created successfully, <a routerLink=\"/login\">Please login</a> to continue.</p>        \r\n      </div>  \r\n      <!-- <p>\r\n        Form Value: {{ registrationForm.value | json }}\r\n      </p>\r\n      \r\n      \r\n      <p>\r\n        Form Status: {{ registrationForm.status }}\r\n      </p>       -->\r\n    </div> \r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { AuthGuard } from './core/authentication/auth.guard';\r\nimport { LoginComponent } from './account/login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, pathMatch: 'full', canActivate: [AuthGuard] },\r\n  { path: 'post/:postId', component: PostDetailsComponent },\r\n  { path: 'stock/:symbol', component: StockComponent },\r\n  { path: 'user/:username', component: UserComponent },\r\n  { path: 'tag/:tag', component: TagComponent },\r\n  { path: 'auth-callback', component: AuthCallbackComponent },\r\n  // { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Client';\r\n\r\n  constructor(private iconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) {\r\n      this.iconRegistry.addSvgIcon('bearish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bear.svg'));\r\n      this.iconRegistry.addSvgIcon('bullish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bull-face.svg'));\r\n      this.iconRegistry.addSvgIcon('like', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/like.svg'));\r\n  }\r\n}\r\n\r\n\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgMaterialModule } from './ngmaterial/ngmaterial.module';\r\nimport { WatchlistComponent } from './watchlist/watchlist.component';\r\nimport { WatchlistService } from './watchlist/watchlist.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SubmitPostFormComponent } from './submit-post-form/submit-post-form.component';\r\nimport { FeedContainerComponent } from './feed-container/feed-container.component';\r\nimport { MyFeedComponent } from './my-feed/my-feed.component';\r\nimport { MyFeedService } from './my-feed/my-feed.service';\r\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\r\nimport { LinkifyPipe } from './pipes/linkify-pipe';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { StripHtmlPipe } from './pipes/stirp-html-pipe';\r\nimport { AccountModule } from './account/account.module';\r\nimport { ShellModule } from './shell/shell.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthCallbackComponent } from './auth-callback/auth-callback.component';\r\nimport { TopSecretModule } from './top-secret/top-secret.module';\r\nimport { AuthService } from './core/authentication/auth.service';\r\nimport { AuthGuard } from './core/authentication/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthCallbackComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    WatchlistComponent,\r\n    SubmitPostFormComponent,\r\n    FeedContainerComponent,\r\n    NewsFeedComponent,\r\n    StripHtmlPipe,\r\n    PostDetailsComponent,\r\n    StockComponent,\r\n    UserComponent,\r\n    TagComponent    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,    \r\n    NgMaterialModule,\r\n    FormsModule,    \r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AccountModule,\r\n    TopSecretModule,\r\n    ShellModule,\r\n    SharedModule\r\n  ],\r\n  providers: [    \r\n    AuthGuard,\r\n    AuthService,\r\n    WatchlistService, \r\n    MyFeedService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div *ngIf=\"error\" class=\"row justify-content-center\">\r\n    <div class=\"col-md-8 text-center\">\r\n          <div class=\"alert alert-warning\" role=\"alert\">\r\n            Oops, there was an error, please try to <a routerLink=\"/login\">login again</a>.\r\n          </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth-callback',\r\n  templateUrl: './auth-callback.component.html',\r\n  styleUrls: ['./auth-callback.component.scss']\r\n})\r\nexport class AuthCallbackComponent implements OnInit {\r\n\r\n  error: boolean;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {}\r\n\r\n  async ngOnInit() { \r\n    // check for error\r\n    console.log(this.route.snapshot.fragment);\r\n    if (this.route.snapshot.fragment) {    \r\n      if (this.route.snapshot.fragment.indexOf('error') >= 0) {\r\n        this.error=true; \r\n        return;    \r\n      }\r\n    }\r\n    \r\n    await this.authService.completeAuthentication();      \r\n    this.router.navigate(['/home']);    \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router, private authService: AuthService) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n        if (this.authService.isAuthenticated()) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login'], { \r\n            queryParams: { redirect: state.url }, replaceUrl: true });        \r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserManager, UserManagerSettings, User } from 'oidc-client';\r\nimport { BehaviorSubject } from 'rxjs'; \r\n\r\nimport { BaseService } from \"../../shared/base.service\";\r\nimport { ConfigService } from '../../shared/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService extends BaseService  {\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private manager = new UserManager(getClientSettings());\r\n  private user: User | null;\r\n\r\n  constructor(private http: HttpClient, private configService: ConfigService) { \r\n    super();     \r\n    \r\n    this.manager.getUser().then(user => { \r\n      this.user = user;      \r\n      this._authNavStatusSource.next(this.isAuthenticated());\r\n    });\r\n  }\r\n\r\n  login() { \r\n    return this.manager.signinRedirect();   \r\n  }\r\n\r\n  async completeAuthentication() {\r\n      this.user = await this.manager.signinRedirectCallback();      \r\n      console.log(this.user);\r\n      this._authNavStatusSource.next(this.isAuthenticated());      \r\n  }  \r\n\r\n  register(userRegistration: any) {    \r\n    return this.http.post(this.configService.authApiURI + '/Account/Register', userRegistration).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n\r\n  get authorizationHeaderValue(): string {\r\n    return `${this.user.token_type} ${this.user.access_token}`;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.user != null ? this.user.profile.name : '';\r\n  }\r\n\r\n  async signout() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n}\r\n\r\nexport function getClientSettings(): UserManagerSettings {\r\n  return {\r\n      authority: 'https://localhost/tiririt',\r\n      client_id: 'tiririt',\r\n      redirect_uri: 'http://localhost:4200/auth-callback',\r\n      post_logout_redirect_uri: 'http://localhost:4200/',\r\n      response_type:\"code\",\r\n      scope:\"openid profile api1\",\r\n      filterProtocolClaims: true,\r\n      loadUserInfo: true,\r\n      automaticSilentRenew: true,\r\n      client_secret: \"secret\",\r\n      silent_redirect_uri: 'http://localhost:4200/silent-refresh.html'\r\n  };\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-feed-container',\r\n  templateUrl: './feed-container.component.html',\r\n  styleUrls: ['./feed-container.component.css']\r\n})\r\nexport class FeedContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" backgroundColor=\"primary\" color=\"accent\">\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>chat_bubble_outline</mat-icon>\r\n            My Feed\r\n        </ng-template>\r\n        <app-my-feed></app-my-feed>\r\n    </mat-tab>\r\n    <mat-tab label=\"Trending\">\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>trending_up</mat-icon>\r\n            Trending\r\n        </ng-template>\r\n        Content 3</mat-tab>\r\n    <mat-tab label=\"News\">\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>rss_feed</mat-icon>\r\n            News\r\n        </ng-template>\r\n        <app-news-feed></app-news-feed>\r\n    </mat-tab>\r\n    \r\n</mat-tab-group>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n","\r\n    <div class=\"flexbox-container\">\r\n        <div class=\"flexbox-item side-navigation\">\r\n            <app-watchlist></app-watchlist>\r\n        </div>\r\n        <div class=\"flexbox-item main-content\">\r\n            <div class=\"flex-main-content\">\r\n                <div class=\"flex-main-content-item1\">\r\n                    <app-submit-post-form></app-submit-post-form>\r\n                </div>\r\n                <div class=\"flex-main-content-item2\">\r\n                    <app-feed-container></app-feed-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyFeedService } from './my-feed.service';\r\nimport { PostModel } from './post-model';\r\n\r\n@Component({\r\n  selector: 'app-my-feed',\r\n  templateUrl: './my-feed.component.html',\r\n  styleUrls: ['./my-feed.component.css']\r\n})\r\nexport class MyFeedComponent implements OnInit {\r\n\r\n  myFeed: PostModel[];\r\n\r\n  constructor(private myFeedService: MyFeedService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.myFeedService.getMyFeed()\r\n      .subscribe(result => {\r\n        this.myFeed = result;\r\n        console.log(this.myFeed);\r\n      }, error => console.error(error));\r\n  }\r\n\r\n  goToPost() {\r\n    console.log('hello');\r\n  }\r\n\r\n}\r\n","<div class=\"feed-filter\">\r\n<mat-button-toggle-group appearance=\"legacy\">\r\n    <mat-button-toggle checked>All</mat-button-toggle>\r\n    <mat-button-toggle>Mentions</mat-button-toggle>\r\n    <mat-button-toggle>Watch List</mat-button-toggle>\r\n    <mat-button-toggle>Subscription</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n</div>\r\n\r\n<div *ngFor=\"let post of myFeed\">    \r\n<mat-card>\r\n    <mat-card-header>     \r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-subtitle>\r\n            <div>\r\n            {{ post.userName }}   <br>\r\n            Posted {{ post.postDate }}\r\n            </div>            \r\n            \r\n        </mat-card-subtitle>\r\n        <!-- <div class=\"bearbullindicator\">            \r\n            <mat-icon svgIcon=\"bullish\" *ngIf=\"post.bullBearLevel == 'VeryBullish'\"></mat-icon>\r\n            <mat-icon svgIcon=\"bearish\" *ngIf=\"post.bullBearLevel == 'VeryBearish'\"></mat-icon>\r\n        </div> -->\r\n        <div class=\"bearbullindicator\">\r\n            <div class=\"bearbullindicator1 bullish\"  *ngIf=\"post.bullBearLevel == 'VeryBullish'\">Bullish</div>\r\n            <div class=\"bearbullindicator1 bearish\"  *ngIf=\"post.bullBearLevel == 'VeryBearish'\">Bearish</div>\r\n        </div>\r\n    </mat-card-header>\r\n    \r\n    <mat-card-content>\r\n        <p [innerHTML]=\"post.postText | linkify\"></p>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n        <button mat-icon-button >\r\n            <mat-icon class=\"icon-display\">reply</mat-icon>\r\n        </button>\r\n        <button mat-icon-button >\r\n            <mat-icon class=\"icon-display\">format_quote</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n            <!-- <span matBadge=\"\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.responseCount > 0\"></span> -->\r\n                <mat-icon class=\"icon-display\">mode_comment</mat-icon>\r\n                <span *ngIf=\"post.responseCount > 0\">{{ post.responseCount }}</span>\r\n        </button>\r\n        <button mat-icon-button>\r\n            <!-- <span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.likeCount > 0\"></span> -->\r\n                <!-- <img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                 -->\r\n                <mat-icon svgIcon=\"like\" class=\"icon-display\"></mat-icon>\r\n                <span *ngIf=\"post.likeCount > 0\">{{ post.likeCount }}</span>\r\n        </button>\r\n        <!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\r\n                <img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\r\n        </button> -->\r\n        \r\n    </mat-card-actions>\r\n</mat-card>\r\n<mat-divider></mat-divider>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PostModel } from './post-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyFeedService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getMyFeed(): Observable<PostModel[]> {\r\n    const url = './assets/myfeed.json';\r\n    return this.http.get<PostModel[]>(url);\r\n  }\r\n}\r\n","<header>\r\n    <nav\r\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n    >\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\"><img alt=\"Titos & Titas of Finance Logo\" src=\"./assets/TandT-150x83-logo.png\" /></a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\".navbar-collapse\"\r\n          aria-label=\"Toggle navigation\"\r\n          [attr.aria-expanded]=\"isExpanded\"\r\n          (click)=\"toggle()\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n          [ngClass]=\"{ show: isExpanded }\"\r\n        >\r\n          <ul class=\"navbar-nav flex-grow\">\r\n            <li\r\n              class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n            >\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n            </li>\r\n              \r\n            <li class=\"nav-item\" *ngIf=\"!isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/register']\">Signup!</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link text-dark\" (click)=\"signOut()\" href=\"javascript:void(0)\">Signout {{ name }}</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div class=\"searchFormField\">\r\n            <mat-form-field>\r\n              <input matInput id=\"searchBox\" placeholder=\"Search\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  ","import { Component } from '@angular/core';\r\nimport { AuthService } from '../core/authentication/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-nav-menu',\r\n    templateUrl: './nav-menu.component.html',\r\n    styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent \r\n{\r\n    isExpanded = false;\r\n    isAuthenticated = false;\r\n    subscription: Subscription;\r\n    name: string;\r\n\r\n    constructor(private authService: AuthService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.authService.authNavStatus$\r\n            .subscribe(status => { \r\n                this.isAuthenticated = status;\r\n                console.log(`isAuthenticated: ${status}`);\r\n                this.name = this.authService.name;        \r\n            });        \r\n    }\r\n\r\n    async signOut() {\r\n        await this.authService.signout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    collapse() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NewsRss } from './news-rss';\r\n// import * as xml2js from \"xml2js\";\r\n// import { NewsRss } from './news-rss';\r\n\r\n@Component({\r\n  selector: 'app-news-feed',\r\n  templateUrl: './news-feed.component.html',\r\n  styleUrls: ['./news-feed.component.css']\r\n})\r\nexport class NewsFeedComponent implements OnInit {\r\n\r\n  rssData: NewsRss;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRssFeedData();\r\n  }\r\n\r\n  getRssFeedData() {\r\n  \r\n    this.http\r\n      .get<NewsRss>(\"./assets/news-feed.json\")\r\n      .subscribe(data => {          \r\n        this.rssData = data;\r\n        // if (this.rssData) {\r\n        //   for(let i = 0; i < this.rssData.rss.channel.item.length; i++) {\r\n        //     this.rssData.rss.channel.item[i].description = this.rssData.rss.channel.item[i].description.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n        //   }\r\n        // }\r\n        console.log(this.rssData.rss.channel);\r\n      });\r\n  }\r\n\r\n}\r\n","<!-- <ul>\r\n\t<li *ngFor=\"let o of rssData?.rss.channel.item\">\r\n\t\t<a href=\"{{ o.link }}\">{{ o.title }}</a>\r\n\t</li>\r\n</ul> -->\r\n\r\n<div *ngFor=\"let rss of rssData?.rss.channel.item\">    \r\n\t<mat-card>\r\n\t\t<mat-card-header>     \r\n\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\r\n\t\t\t<mat-card-subtitle>\r\n\t\t\t\t<div>\r\n\t\t\t\t<a href=\"https://investing.einnews.com/news/philippine-stock-exchange\">EIN News</a>   <br>\r\n\t\t\t\tPosted {{ rss.pubDate }}\r\n\t\t\t\t</div>            \r\n\t\t\t</mat-card-subtitle>\t\r\n\t\t</mat-card-header>\r\n\t\t\r\n\t\t<mat-card-content>\r\n\t\t\t<a href=\"{{ rss.link }}\"><p>{{ rss.title }}</p></a>\r\n\t\t\t\r\n\t\t\t{{ rss.description | striphtml }}\r\n\t\t</mat-card-content>\r\n\t\r\n\t\t<mat-card-actions>\t\t\t\r\n\t\t\t<button mat-icon-button >\r\n\t\t\t\t<mat-icon class=\"icon-display\">format_quote</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<!-- <button mat-icon-button>\r\n\t\t\t\t<span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\r\n\t\t\t\t\t<mat-icon>mode_comment</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button>\r\n\t\t\t\t<span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                \r\n\t\t\t</button> -->\r\n\t\t\t<!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\r\n\t\t\t</button> -->\r\n\t\t\t\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n\t<mat-divider></mat-divider>\r\n\t</div>","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatBadgeModule\r\n  ],  \r\n  exports: [\r\n    // CommonModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatBadgeModule\r\n  ]\r\n})\r\nexport class NgMaterialModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: \"linkify\"\r\n})\r\nexport class LinkifyPipe implements PipeTransform{\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n\r\n    }\r\n\r\n    transform(value: string, ...args: any[]): any {        \r\n        let result = value.replace(/[\\$|@|\\#][(\\^)a-zA-Z]+/g, (match) => {            \r\n            const linkParam = match.replace(/[\\$|@|\\#]/g, \"\");\r\n            const linkIndicator = match[0];\r\n            switch(linkIndicator)\r\n            {\r\n                case '$':\r\n                    return `<a href=\"/stock/${linkParam}\">${match}</a>`;\r\n                case '@':\r\n                    return `<a href=\"/user/${linkParam}\">${match}</a>`;\r\n                case '#':\r\n                    return `<a href=\"/tag/${linkParam}\">${match}</a>`;\r\n            } \r\n\r\n        });\r\n        return this.domSanitizer.bypassSecurityTrustHtml(result);        \r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'striphtml'\r\n})\r\nexport class StripHtmlPipe implements PipeTransform {\r\n    transform(value: string, ...args: any[]): any {\r\n        return value.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-post-details',\r\n  templateUrl: './post-details.component.html',\r\n  styleUrls: ['./post-details.component.css']\r\n})\r\nexport class PostDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>post-details works!</p>\r\n","import { throwError } from 'rxjs';\r\n\r\nexport abstract class BaseService {  \r\n    \r\n    constructor() { }\r\n\r\n    protected handleError(error: any) {\r\n\r\n      var applicationError = error.headers.get('Application-Error');\r\n\r\n      // either application-error in header or model error in body\r\n      if (applicationError) {\r\n        return throwError(applicationError);\r\n      }\r\n      \r\n      var modelStateErrors: string = '';\r\n\r\n        // for now just concatenate the error descriptions, alternative we could simply pass the entire error response upstream\r\n        for (var key in error.error) {\r\n          if (error.error[key]) modelStateErrors += error.error[key].description + '\\n'; \r\n        }\r\n        \r\n      modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n      return throwError(modelStateErrors || 'Server error');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor() { }\r\n\r\n  get authApiURI() {\r\n      return 'https://localhost/tiririt/api';\r\n  }    \r\n \r\n  get resourceApiURI() {\r\n      return 'https://localhost/tiririt/api';\r\n  }  \r\n\r\n}\r\n","import { AfterContentInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[autoFocus]'\r\n})\r\nexport class AutofocusDirective implements AfterContentInit {\r\n\r\n    @Input() public appAutoFocus: boolean;\r\n\r\n    public constructor(private el: ElementRef) {\r\n    }\r\n\r\n    public ngAfterContentInit() {\r\n\r\n        setTimeout(() => {\r\n            this.el.nativeElement.focus();\r\n        }, 500);\r\n    }\r\n}","// include directives/components commonly used in features modules in this shared modules\r\n// and import me into the feature module\r\n// importing them individually results in: Type xxx is part of the declarations of 2 modules: ... Please consider moving to a higher module...\r\n// https://github.com/angular/angular/issues/10646  \r\n\r\nimport { NgModule }           from '@angular/core';\r\nimport { CommonModule }       from '@angular/common';\r\n \r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AutofocusDirective } from './directives/auto-focus.directive';\r\nimport { NgMaterialModule } from '../ngmaterial/ngmaterial.module';\r\nimport { MyFeedComponent } from '../my-feed/my-feed.component';\r\nimport { MyFeedService } from '../my-feed/my-feed.service';\r\nimport { LinkifyPipe } from '../pipes/linkify-pipe';\r\n\r\n//https://stackoverflow.com/questions/41433766/directive-doesnt-work-in-a-sub-module\r\n//https://stackoverflow.com/questions/45032043/uncaught-error-unexpected-module-formsmodule-declared-by-the-module-appmodul/45032201\r\n\r\n@NgModule({\r\n  imports:      [\r\n    CommonModule, \r\n    NgxSpinnerModule,\r\n    NgMaterialModule    \r\n  ],\r\n  declarations: [\r\n    AutofocusDirective,\r\n    LinkifyPipe,\r\n    MyFeedComponent\r\n  ],\r\n  exports:      [\r\n    NgxSpinnerModule, \r\n    AutofocusDirective, \r\n    MyFeedComponent, \r\n    LinkifyPipe\r\n  ],\r\n  providers:    [MyFeedService]\r\n})\r\nexport class SharedModule { }","<header> \r\n  <div class=\"navbar navbar-dark bg-dark box-shadow\">\r\n    <div class=\"container d-flex justify-content-between\">\r\n      <a routerLink=\"/\" class=\"navbar-brand d-flex align-items-center\">\r\n        <strong>OAuth Client</strong>\r\n      </a>\r\n      <nav *ngIf=\"!isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n         <a class=\"p-2 text-light\" routerLink=\"/register\">Signup</a> \r\n         <a class=\"p-2 text-light\" routerLink=\"/login\">Login</a>     \r\n      </nav>\r\n      <nav *ngIf=\"isAuthenticated\" class=\"my-2 my-md-0 mr-md-3\">\r\n         <a class=\"p-2 text-light\" routerLink=\"/topsecret\">Top Secret Area</a>  \r\n         <a class=\"p-2 text-light\" (click)=\"signout()\" href=\"javascript:void(0)\">Signout {{name}}</a>               \r\n      </nav>\r\n    </div>    \r\n  </div>\r\n</header>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../core/authentication/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  name: string;\r\n  isAuthenticated: boolean;\r\n  subscription:Subscription;\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.isAuthenticated = status);\r\n    this.name = this.authService.name;\r\n  } \r\n\r\n   async signout() {\r\n    await this.authService.signout();     \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component is destroyed\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<main role=\"main\">\r\n<div class=\"container\"> \r\n  <router-outlet></router-outlet>\r\n</div>\r\n</main>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ShellComponent } from './shell.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [ShellComponent,HeaderComponent]\r\n})\r\nexport class ShellModule { }\r\n","import { Routes, Route } from '@angular/router';\r\nimport { ShellComponent } from './shell.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Provides helper methods to create routes.\r\n */\r\nexport class Shell {\r\n\r\n  /**\r\n   * Creates routes using the shell component and authentication.\r\n   * @param routes The routes to add.\r\n   * @return {Route} The new route using shell as the base.\r\n   */\r\n  static childRoutes(routes: Routes): Route {\r\n    return {\r\n      path: '',\r\n      component: ShellComponent,\r\n      children: routes,\r\n      // =canActivate: [AuthenticationGuard],\r\n      // Reuse ShellComponent instance when navigating between child views\r\n      data: { reuse: true }\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stock',\r\n  templateUrl: './stock.component.html',\r\n  styleUrls: ['./stock.component.css']\r\n})\r\nexport class StockComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>stock works!</p>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatButtonToggle } from '@angular/material/button-toggle';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-submit-post-form',\r\n  templateUrl: './submit-post-form.component.html',\r\n  styleUrls: ['./submit-post-form.component.css']\r\n})\r\nexport class SubmitPostFormComponent implements OnInit {\r\n\r\n  // bullBearIndicator: number;\r\n  isBearish: boolean = false;\r\n  isBullish: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.bullBearIndicator);\r\n  }\r\n\r\n  bearishClick() {\r\n    this.isBearish = !this.isBearish;\r\n    this.isBullish = false;\r\n    console.log(this.isBearish);\r\n  }\r\n\r\n  bullishClick() {\r\n    this.isBullish = !this.isBullish;\r\n    this.isBearish = false;\r\n  }\r\n}\r\n","<mat-card>\r\n\r\n    <mat-card-content>\r\n    <form class=\"tiririt-form\">\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Say something about your favorite stock</mat-label>\r\n            <textarea matInput placeholder=\"Ex. @supertrader @bulltactics $GLO did very well last quarter. #panalo\" \r\n                maxlength=\"300\"></textarea>\r\n        </mat-form-field>\r\n    </form>    \r\n<!-- <mat-card-actions> -->\r\n    <div class=\"post-action-container\">\r\n        <div class=\"post-bear-bull\">\r\n            <button mat-stroked-button color=\"basic\" (click)=\"bearishClick()\" [class.isBearish]=\"isBearish\">\r\n                Bearish</button>\r\n            <button mat-stroked-button color=\"basic\" (click)=\"bullishClick()\" [class.isBullish]=\"isBullish\">                \r\n                Bullish</button>\r\n\r\n        </div>\r\n        <div class=\"post-buttons\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"submit()\">Post</button>\r\n        </div>\r\n    </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card-actions>     -->\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tag works!</p>\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { finalize } from 'rxjs/operators'\nimport { AuthService } from '../../core/authentication/auth.service';\nimport { TopSecretService } from '../top-secret.service';\n\n@Component({\n  selector: 'top-secret-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  claims=null;\n  busy: boolean;\n\n  constructor(private authService: AuthService, private topSecretService: TopSecretService, private spinner: NgxSpinnerService) {\n  }\n\n  ngOnInit() {    \n    this.busy = true;\n    this.spinner.show();\n    this.topSecretService.fetchTopSecretData(this.authService.authorizationHeaderValue)\n    .pipe(finalize(() => {\n      this.spinner.hide();\n      this.busy = false;\n    })).subscribe(\n    result => {         \n      this.claims = result;\n   });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div *ngIf=\"!busy\" class=\"col-md-8\">\n          <h3>Super-secret user claims sent from the server!</h3>\n            <table class=\"table small\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Value</th>                \n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let claim of claims; let i = index\" [attr.data-index]=\"i\">\n                    <th scope=\"row\">{{i}}</th>\n                    <td>{{claim.type}}</td>\n                    <td>{{claim.value}}</td>                   \n                  </tr>                 \n                </tbody>\n              </table>            \n        </div>\n    </div>\n    <ngx-spinner></ngx-spinner>  \n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexComponent } from './index/index.component';\nimport { TopSecretService } from './top-secret.service';\nimport { TopSecretRoutingModule } from './top-secret.routing-module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [IndexComponent],\n  providers: [ TopSecretService ],\n  imports: [\n    CommonModule,\n    TopSecretRoutingModule,\n    SharedModule\n  ]\n})\nexport class TopSecretModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Shell } from './../shell/shell.service';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { AuthGuard } from '../core/authentication/auth.guard';\r\n\r\nconst routes: Routes = [\r\nShell.childRoutes([\r\n    { path: 'topsecret', component: IndexComponent, canActivate: [AuthGuard] }       \r\n  ])\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class TopSecretRoutingModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConfigService } from '../shared/config.service';\n\nimport { BaseService } from '../shared/base.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopSecretService extends BaseService {\n\n  constructor(private http: HttpClient, private configService: ConfigService) { \n    super();\n  }\n\n  fetchTopSecretData(token: string) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n\n    return this.http.get(this.configService.resourceApiURI + '/values', httpOptions)\n      .pipe(catchError(this.handleError));\n\n  }  \n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>user works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WatchlistService } from './watchlist.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { StockViewModel } from '../models/stock-view-model';\r\n\r\n@Component({\r\n  selector: 'app-watchlist',\r\n  templateUrl: './watchlist.component.html',\r\n  styleUrls: ['./watchlist.component.css']\r\n})\r\nexport class WatchlistComponent implements OnInit {\r\n\r\n  dataSource = new MatTableDataSource<StockViewModel>();\r\n  displayedColumns: string[] = ['symbol', 'price'];\r\n\r\n  constructor(\r\n    private watchListService: WatchlistService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.watchListService.getWatchList()\r\n      .subscribe(result => {\r\n        this.dataSource = new MatTableDataSource<StockViewModel>(result?.stocks);\r\n      }, error => console.error(error));\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"watchlist-container\"> -->\r\n    \r\n    <mat-form-field>\r\n        <input matInput placeholder=\"Enter symbol\">        \r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\">Add</button>    \r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef>Symbol</th>\r\n            <td mat-cell *matCellDef=\"let stock\">\r\n               <a [routerLink]=\"['/stock', stock.symbol]\">{{ stock.symbol }}</a>\r\n            </td>\r\n        </ng-container>        \r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef>Last Price</th>\r\n            <td mat-cell *matCellDef=\"let stock\">{{ stock.price }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n<!-- </div> -->\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WatchlistModel } from './watchlist-model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WatchlistService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string) { \r\n\r\n  }\r\n\r\n  getWatchList(): Observable<WatchlistModel> {\r\n    const url = 'https://localhost/tiririt/api/v1/WatchList';    \r\n    return this.http.get<WatchlistModel>(url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}