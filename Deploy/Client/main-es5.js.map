{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api-authorization/api-authorization.constants.ts","webpack:///src/app/api-authorization/api-authorization.module.ts","webpack:///src/app/api-authorization/authorize.interceptor.ts","webpack:///src/app/api-authorization/authorize.service.ts","webpack:///src/app/api-authorization/login-menu/login-menu.component.ts","webpack:///src/app/api-authorization/login-menu/login-menu.component.html","webpack:///src/app/api-authorization/login/login.component.ts","webpack:///src/app/api-authorization/login/login.component.html","webpack:///src/app/api-authorization/logout/logout.component.ts","webpack:///src/app/api-authorization/logout/logout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/feed-container/feed-container.component.ts","webpack:///src/app/feed-container/feed-container.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/my-feed/my-feed.component.ts","webpack:///src/app/my-feed/my-feed.component.html","webpack:///src/app/my-feed/my-feed.service.ts","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/news-feed/news-feed.component.ts","webpack:///src/app/news-feed/news-feed.component.html","webpack:///src/app/ngmaterial/ngmaterial.module.ts","webpack:///src/app/pipes/linkify-pipe.ts","webpack:///src/app/pipes/stirp-html-pipe.ts","webpack:///src/app/post-details/post-details.component.ts","webpack:///src/app/post-details/post-details.component.html","webpack:///src/app/stock/stock.component.ts","webpack:///src/app/stock/stock.component.html","webpack:///src/app/submit-post-form/submit-post-form.component.ts","webpack:///src/app/submit-post-form/submit-post-form.component.html","webpack:///src/app/tag/tag.component.ts","webpack:///src/app/tag/tag.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/watchlist/watchlist.component.ts","webpack:///src/app/watchlist/watchlist.component.html","webpack:///src/app/watchlist/watchlist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApplicationName","ReturnUrlType","QueryParameterNames","ReturnUrl","Message","LogoutActions","LogoutCallback","Logout","LoggedOut","LoginActions","Login","LoginCallback","LoginFailed","Profile","Register","applicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","LogOut","LogOutCallback","LoginPathComponents","LoginFailedPathComponents","LoginCallbackPathComponents","RegisterPathComponents","ProfilePathComponents","LogOutPathComponents","LoggedOutPathComponents","LogOutCallbackPathComponents","IdentityRegisterPath","IdentityManagePath","split","ApplicationPaths","ApiAuthorizationModule","forChild","path","component","imports","declarations","AuthorizeInterceptor","authorize","next","getAccessToken","pipe","token","processRequestWithToken","isSameOriginUrl","clone","setHeaders","Authorization","handle","url","startsWith","window","location","origin","host","test","providedIn","AuthenticationResultStatus","AuthorizeService","popUpDisabled","userSubject","getUser","u","getUserFromStorage","asObservable","ensureUserManagerInitialized","userManager","user","access_token","state","signinSilent","createArguments","profile","success","console","log","signinPopup","message","error","signinRedirect","redirect","signinCallback","signoutPopup","signoutRedirect","signoutCallback","response","useReplaceToNavigate","data","status","Fail","Success","Redirect","undefined","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","events","addUserSignedOut","removeUser","LoginMenuComponent","authorizeService","isAuthenticated","userName","name","selector","templateUrl","styleUrls","LoginComponent","activatedRoute","router","action","snapshot","login","getReturnUrl","processLoginCallback","queryParamMap","get","redirectToProfile","redirectToRegister","returnUrl","signIn","result","navigateToReturnUrl","navigate","queryParams","href","completeSignIn","redirectToApiAuthorizationPath","encodeURI","navigateByUrl","replaceUrl","fromQuery","apiAuthorizationPath","redirectUrl","replace","LogoutComponent","history","local","logout","processLogoutCallback","toPromise","isauthenticated","signOut","completeSignOut","routes","pathMatch","AppRoutingModule","forRoot","AppComponent","iconRegistry","domSanitizer","title","addSvgIcon","bypassSecurityTrustResourceUrl","AppModule","provide","useClass","multi","providers","bootstrap","FeedContainerComponent","HomeComponent","MyFeedComponent","myFeedService","getMyFeed","subscribe","myFeed","MyFeedService","http","NavMenuComponent","isExpanded","toggle","NewsFeedComponent","getRssFeedData","rssData","rss","channel","NgMaterialModule","LinkifyPipe","value","match","linkParam","linkIndicator","bypassSecurityTrustHtml","StripHtmlPipe","PostDetailsComponent","StockComponent","SubmitPostFormComponent","isBearish","isBullish","bearishClick","bullishClick","submit","TagComponent","UserComponent","WatchlistComponent","watchListService","dataSource","displayedColumns","getWatchList","stocks","WatchlistService","baseUrl","environment","production","getBaseUrl","document","getElementsByTagName","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export const ApplicationName = 'Tiririt';\r\n\r\nexport const ReturnUrlType = 'returnUrl';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: ReturnUrlType,\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nlet applicationPaths: ApplicationPathsType = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `https://localhost/tiriritapi/_configuration/${ApplicationName}`,\r\n  Login: `authentication/${LoginActions.Login}`,\r\n  LoginFailed: `authentication/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `authentication/${LoginActions.LoginCallback}`,\r\n  Register: `authentication/${LoginActions.Register}`,\r\n  Profile: `authentication/${LoginActions.Profile}`,\r\n  LogOut: `authentication/${LogoutActions.Logout}`,\r\n  LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\r\n  LoginPathComponents: [],\r\n  LoginFailedPathComponents: [],\r\n  LoginCallbackPathComponents: [],\r\n  RegisterPathComponents: [],\r\n  ProfilePathComponents: [],\r\n  LogOutPathComponents: [],\r\n  LoggedOutPathComponents: [],\r\n  LogOutCallbackPathComponents: [],\r\n  IdentityRegisterPath: 'https://localhost/tiriritapi/Identity/Account/Register',\r\n  IdentityManagePath: 'https://localhost/tiriritapi/Identity/Account/Manage'\r\n};\r\n\r\napplicationPaths = {\r\n  ...applicationPaths,\r\n  LoginPathComponents: applicationPaths.Login.split('/'),\r\n  LoginFailedPathComponents: applicationPaths.LoginFailed.split('/'),\r\n  RegisterPathComponents: applicationPaths.Register.split('/'),\r\n  ProfilePathComponents: applicationPaths.Profile.split('/'),\r\n  LogOutPathComponents: applicationPaths.LogOut.split('/'),\r\n  LoggedOutPathComponents: applicationPaths.LoggedOut.split('/'),\r\n  LogOutCallbackPathComponents: applicationPaths.LogOutCallback.split('/')\r\n};\r\n\r\ninterface ApplicationPathsType {\r\n  readonly DefaultLoginRedirectPath: string;\r\n  readonly ApiAuthorizationClientConfigurationUrl: string;\r\n  readonly Login: string;\r\n  readonly LoginFailed: string;\r\n  readonly LoginCallback: string;\r\n  readonly Register: string;\r\n  readonly Profile: string;\r\n  readonly LogOut: string;\r\n  readonly LoggedOut: string;\r\n  readonly LogOutCallback: string;\r\n  readonly LoginPathComponents: string [];\r\n  readonly LoginFailedPathComponents: string [];\r\n  readonly LoginCallbackPathComponents: string [];\r\n  readonly RegisterPathComponents: string [];\r\n  readonly ProfilePathComponents: string [];\r\n  readonly LogOutPathComponents: string [];\r\n  readonly LoggedOutPathComponents: string [];\r\n  readonly LogOutCallbackPathComponents: string [];\r\n  readonly IdentityRegisterPath: string;\r\n  readonly IdentityManagePath: string;\r\n}\r\n\r\nexport const ApplicationPaths: ApplicationPathsType = applicationPaths;\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginMenuComponent } from './login-menu/login-menu.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApplicationPaths } from './api-authorization.constants';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(\r\n      [\r\n        { path: ApplicationPaths.Register, component: LoginComponent },\r\n        { path: ApplicationPaths.Profile, component: LoginComponent },\r\n        { path: ApplicationPaths.Login, component: LoginComponent },\r\n        { path: ApplicationPaths.LoginFailed, component: LoginComponent },\r\n        { path: ApplicationPaths.LoginCallback, component: LoginComponent },\r\n        { path: ApplicationPaths.LogOut, component: LogoutComponent },\r\n        { path: ApplicationPaths.LoggedOut, component: LogoutComponent },\r\n        { path: ApplicationPaths.LogOutCallback, component: LogoutComponent }\r\n      ]\r\n    )\r\n  ],\r\n  declarations: [LoginMenuComponent, LoginComponent, LogoutComponent],\r\n  exports: [LoginMenuComponent, LoginComponent, LogoutComponent]\r\n})\r\nexport class ApiAuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthorizeService } from './authorize.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n  constructor(private authorize: AuthorizeService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.authorize.getAccessToken()\r\n      .pipe(mergeMap(token => this.processRequestWithToken(token, req, next)));\r\n  }\r\n\r\n  // Checks if there is an access_token available in the authorize service\r\n  // and adds it to the request in case it's targeted at the same origin as the\r\n  // single page application.\r\n  private processRequestWithToken(token: string, req: HttpRequest<any>, next: HttpHandler) {\r\n    if (!!token && this.isSameOriginUrl(req)) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n\r\n  private isSameOriginUrl(req: any) {\r\n    // It's an absolute url with the same origin.\r\n    if (req.url.startsWith(`${window.location.origin}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a protocol relative url with the same origin.\r\n    // For example: //www.example.com/api/Products\r\n    if (req.url.startsWith(`//${window.location.host}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a relative url like /api/Products\r\n    if (/^\\/[^\\/].*/.test(req.url)) {\r\n      return true;\r\n    }\r\n\r\n    // It's an absolute or protocol relative url that\r\n    // doesn't have the same origin.\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\r\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\r\nimport { ApplicationPaths, ApplicationName } from './api-authorization.constants';\r\n\r\nexport type IAuthenticationResult =\r\n  SuccessAuthenticationResult |\r\n  FailureAuthenticationResult |\r\n  RedirectAuthenticationResult;\r\n\r\nexport interface SuccessAuthenticationResult {\r\n  status: AuthenticationResultStatus.Success;\r\n  state: any;\r\n}\r\n\r\nexport interface FailureAuthenticationResult {\r\n  status: AuthenticationResultStatus.Fail;\r\n  message: string;\r\n}\r\n\r\nexport interface RedirectAuthenticationResult {\r\n  status: AuthenticationResultStatus.Redirect;\r\n}\r\n\r\nexport enum AuthenticationResultStatus {\r\n  Success,\r\n  Redirect,\r\n  Fail\r\n}\r\n\r\nexport interface IUser {\r\n  name?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeService {\r\n  // By default pop ups are disabled because they don't work properly on Edge.\r\n  // If you want to enable pop up authentication simply set this flag to false.\r\n\r\n  private popUpDisabled = true;\r\n  private userManager: UserManager;\r\n  private userSubject: BehaviorSubject<IUser | null> = new BehaviorSubject(null);\r\n\r\n  public isAuthenticated(): Observable<boolean> {\r\n    return this.getUser().pipe(map(u => !!u));\r\n  }\r\n\r\n  public getUser(): Observable<IUser | null> {\r\n    return concat(\r\n      this.userSubject.pipe(take(1), filter(u => !!u)),\r\n      this.getUserFromStorage().pipe(filter(u => !!u), tap(u => this.userSubject.next(u))),\r\n      this.userSubject.asObservable());\r\n  }\r\n\r\n  public getAccessToken(): Observable<string> {\r\n    return from(this.ensureUserManagerInitialized())\r\n      .pipe(mergeMap(() => from(this.userManager.getUser())),\r\n        map(user => user && user.access_token));\r\n  }\r\n\r\n  // We try to authenticate the user in three different ways:\r\n  // 1) We try to see if we can authenticate the user silently. This happens\r\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n  //    on the client.\r\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n  //    Pop-Up blocker or the user has disabled PopUps.\r\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n  //    redirect flow.\r\n  public async signIn(state: any): Promise<IAuthenticationResult> {\r\n    await this.ensureUserManagerInitialized();\r\n    let user: User = null;\r\n    try {\r\n      user = await this.userManager.signinSilent(this.createArguments());\r\n      this.userSubject.next(user.profile);\r\n      return this.success(state);\r\n    } catch (silentError) {\r\n      // User might not be authenticated, fallback to popup authentication\r\n      console.log('Silent authentication error: ', silentError);\r\n\r\n      try {\r\n        if (this.popUpDisabled) {\r\n          throw new Error('Popup disabled. Change \\'authorize.service.ts:AuthorizeService.popupDisabled\\' to false to enable it.');\r\n        }\r\n        user = await this.userManager.signinPopup(this.createArguments());\r\n        this.userSubject.next(user.profile);\r\n        return this.success(state);\r\n      } catch (popupError) {\r\n        if (popupError.message === 'Popup window closed') {\r\n          // The user explicitly cancelled the login action by closing an opened popup.\r\n          return this.error('The user closed the window.');\r\n        } else if (!this.popUpDisabled) {\r\n          console.log('Popup authentication error: ', popupError);\r\n        }\r\n\r\n        // PopUps might be blocked by the user, fallback to redirect\r\n        try {\r\n          await this.userManager.signinRedirect(this.createArguments(state));\r\n          return this.redirect();\r\n        } catch (redirectError) {\r\n          console.log('Redirect authentication error: ', redirectError);\r\n          return this.error(redirectError);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async completeSignIn(url: string): Promise<IAuthenticationResult> {\r\n    try {\r\n      await this.ensureUserManagerInitialized();\r\n      const user = await this.userManager.signinCallback(url);\r\n      this.userSubject.next(user && user.profile);\r\n      return this.success(user && user.state);\r\n    } catch (error) {\r\n      console.log('There was an error signing in: ', error);\r\n      return this.error('There was an error signing in.');\r\n    }\r\n  }\r\n\r\n  public async signOut(state: any): Promise<IAuthenticationResult> {\r\n    try {\r\n      if (this.popUpDisabled) {\r\n        throw new Error('Popup disabled. Change \\'authorize.service.ts:AuthorizeService.popupDisabled\\' to false to enable it.');\r\n      }\r\n\r\n      await this.ensureUserManagerInitialized();\r\n      await this.userManager.signoutPopup(this.createArguments());\r\n      this.userSubject.next(null);\r\n      return this.success(state);\r\n    } catch (popupSignOutError) {\r\n      console.log('Popup signout error: ', popupSignOutError);\r\n      try {\r\n        await this.userManager.signoutRedirect(this.createArguments(state));\r\n        return this.redirect();\r\n      } catch (redirectSignOutError) {\r\n        console.log('Redirect signout error: ', popupSignOutError);\r\n        return this.error(redirectSignOutError);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async completeSignOut(url: string): Promise<IAuthenticationResult> {\r\n    await this.ensureUserManagerInitialized();\r\n    try {\r\n      const response = await this.userManager.signoutCallback(url);\r\n      this.userSubject.next(null);\r\n      return this.success(response && response.state);\r\n    } catch (error) {\r\n      console.log(`There was an error trying to log out '${error}'.`);\r\n      return this.error(error);\r\n    }\r\n  }\r\n\r\n  private createArguments(state?: any): any {\r\n    return { useReplaceToNavigate: true, data: state };\r\n  }\r\n\r\n  private error(message: string): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Fail, message };\r\n  }\r\n\r\n  private success(state: any): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Success, state };\r\n  }\r\n\r\n  private redirect(): IAuthenticationResult {\r\n    return { status: AuthenticationResultStatus.Redirect };\r\n  }\r\n\r\n  private async ensureUserManagerInitialized(): Promise<void> {\r\n    if (this.userManager !== undefined) {\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n    if (!response.ok) {\r\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n    }\r\n\r\n    const settings: any = await response.json();\r\n    settings.automaticSilentRenew = true;\r\n    settings.includeIdTokenInSilentRenew = true;\r\n    this.userManager = new UserManager(settings);\r\n\r\n    this.userManager.events.addUserSignedOut(async () => {\r\n      await this.userManager.removeUser();\r\n      this.userSubject.next(null);\r\n    });\r\n  }\r\n\r\n  private getUserFromStorage(): Observable<IUser> {\r\n    return from(this.ensureUserManagerInitialized())\r\n      .pipe(\r\n        mergeMap(() => this.userManager.getUser()),\r\n        map(u => u && u.profile));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizeService } from '../authorize.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login-menu',\r\n  templateUrl: './login-menu.component.html',\r\n  styleUrls: ['./login-menu.component.css']\r\n})\r\nexport class LoginMenuComponent implements OnInit {\r\n  public isAuthenticated: Observable<boolean>;\r\n  public userName: Observable<string>;\r\n\r\n  constructor(private authorizeService: AuthorizeService) { }\r\n\r\n  ngOnInit() {\r\n    this.isAuthenticated = this.authorizeService.isAuthenticated();\r\n    this.userName = this.authorizeService.getUser().pipe(map(u => u && u.name));\r\n  }\r\n}\r\n","<ul class=\"navbar-nav\" *ngIf=\"isAuthenticated | async\">\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/profile\"]' title=\"Manage\">Hello {{ userName | async }}</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/logout\"]' [state]='{ local: true }' title=\"Logout\">Logout</a>\r\n    </li>\r\n</ul>\r\n<ul class=\"navbar-nav\" *ngIf=\"!(isAuthenticated | async)\">\r\n  <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/register\"]'>Register</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/login\"]'>Login</a>\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizeService, AuthenticationResultStatus } from '../authorize.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public message = new BehaviorSubject<string>(null);\r\n\r\n  constructor(\r\n    private authorizeService: AuthorizeService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n    const action = this.activatedRoute.snapshot.url[1];\r\n    switch (action.path) {\r\n      case LoginActions.Login:\r\n        await this.login(this.getReturnUrl());\r\n        break;\r\n      case LoginActions.LoginCallback:\r\n        await this.processLoginCallback();\r\n        break;\r\n      case LoginActions.LoginFailed:\r\n        const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\r\n        this.message.next(message);\r\n        break;\r\n      case LoginActions.Profile:\r\n        this.redirectToProfile();\r\n        break;\r\n      case LoginActions.Register:\r\n        this.redirectToRegister();\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid action '${action}'`);\r\n    }\r\n  }\r\n\r\n\r\n  private async login(returnUrl: string): Promise<void> {\r\n    const state: INavigationState = { returnUrl };\r\n    const result = await this.authorizeService.signIn(state);\r\n    this.message.next(undefined);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        break;\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(returnUrl);\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\r\n          queryParams: { [QueryParameterNames.Message]: result.message }\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid status result ${(result as any).status}.`);\r\n    }\r\n  }\r\n\r\n  private async processLoginCallback(): Promise<void> {\r\n    const url = window.location.href;\r\n    const result = await this.authorizeService.completeSignIn(url);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        // There should not be any redirects as completeSignIn never redirects.\r\n        throw new Error('Should not redirect.');\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        this.message.next(result.message);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private redirectToRegister(): any {\r\n    this.redirectToApiAuthorizationPath(\r\n      `${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\r\n  }\r\n\r\n  private redirectToProfile(): void {\r\n    this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n  }\r\n\r\n  private async navigateToReturnUrl(returnUrl: string) {\r\n    // It's important that we do a replace here so that we remove the callback uri with the\r\n    // fragment containing the tokens from the browser history.\r\n    await this.router.navigateByUrl(returnUrl, {\r\n      replaceUrl: true\r\n    });\r\n  }\r\n\r\n  private getReturnUrl(state?: INavigationState): string {\r\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\r\n    // If the url is comming from the query string, check that is either\r\n    // a relative url or an absolute url\r\n    if (fromQuery &&\r\n      !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n        /\\/[^\\/].*/.test(fromQuery))) {\r\n      // This is an extra check to prevent open redirects.\r\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n    }\r\n    return (state && state.returnUrl) ||\r\n      fromQuery ||\r\n      ApplicationPaths.DefaultLoginRedirectPath;\r\n  }\r\n\r\n  private redirectToApiAuthorizationPath(apiAuthorizationPath: string) {\r\n    // It's important that we do a replace here so that when the user hits the back arrow on the\r\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\r\n    // component.\r\n    //const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n    const redirectUrl = apiAuthorizationPath;\r\n    window.location.replace(redirectUrl);\r\n  }\r\n}\r\n\r\ninterface INavigationState {\r\n  [ReturnUrlType]: string;\r\n}\r\n","<p>{{ message | async }}</p>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationResultStatus, AuthorizeService } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  public message = new BehaviorSubject<string>(null);\r\n\r\n  constructor(\r\n    private authorizeService: AuthorizeService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n    const action = this.activatedRoute.snapshot.url[1];\r\n    switch (action.path) {\r\n      case LogoutActions.Logout:\r\n        if (!!window.history.state.local) {\r\n          await this.logout(this.getReturnUrl());\r\n        } else {\r\n          // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n          this.message.next('The logout was not initiated from within the page.');\r\n        }\r\n\r\n        break;\r\n      case LogoutActions.LogoutCallback:\r\n        await this.processLogoutCallback();\r\n        break;\r\n      case LogoutActions.LoggedOut:\r\n        this.message.next('You successfully logged out!');\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid action '${action}'`);\r\n    }\r\n  }\r\n\r\n  private async logout(returnUrl: string): Promise<void> {\r\n    const state: INavigationState = { returnUrl };\r\n    const isauthenticated = await this.authorizeService.isAuthenticated().pipe(\r\n      take(1)\r\n    ).toPromise();\r\n    if (isauthenticated) {\r\n      const result = await this.authorizeService.signOut(state);\r\n      switch (result.status) {\r\n        case AuthenticationResultStatus.Redirect:\r\n          break;\r\n        case AuthenticationResultStatus.Success:\r\n          await this.navigateToReturnUrl(returnUrl);\r\n          break;\r\n        case AuthenticationResultStatus.Fail:\r\n          this.message.next(result.message);\r\n          break;\r\n        default:\r\n          throw new Error('Invalid authentication result status.');\r\n      }\r\n    } else {\r\n      this.message.next('You successfully logged out!');\r\n    }\r\n  }\r\n\r\n  private async processLogoutCallback(): Promise<void> {\r\n    const url = window.location.href;\r\n    const result = await this.authorizeService.completeSignOut(url);\r\n    switch (result.status) {\r\n      case AuthenticationResultStatus.Redirect:\r\n        // There should not be any redirects as the only time completeAuthentication finishes\r\n        // is when we are doing a redirect sign in flow.\r\n        throw new Error('Should not redirect.');\r\n      case AuthenticationResultStatus.Success:\r\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n        break;\r\n      case AuthenticationResultStatus.Fail:\r\n        this.message.next(result.message);\r\n        break;\r\n      default:\r\n        throw new Error('Invalid authentication result status.');\r\n    }\r\n  }\r\n\r\n  private async navigateToReturnUrl(returnUrl: string) {\r\n    await this.router.navigateByUrl(returnUrl, {\r\n      replaceUrl: true\r\n    });\r\n  }\r\n\r\n  private getReturnUrl(state?: INavigationState): string {\r\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\r\n    // If the url is comming from the query string, check that is either\r\n    // a relative url or an absolute url\r\n    if (fromQuery &&\r\n      !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n        /\\/[^\\/].*/.test(fromQuery))) {\r\n      // This is an extra check to prevent open redirects.\r\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n    }\r\n    return (state && state.returnUrl) ||\r\n      fromQuery ||\r\n      ApplicationPaths.LoggedOut;\r\n  }\r\n}\r\n\r\ninterface INavigationState {\r\n  [ReturnUrlType]: string;\r\n}\r\n","<p>{{ message | async }}</p>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'post/:postId', component: PostDetailsComponent },\r\n  { path: 'stock/:symbol', component: StockComponent },\r\n  { path: 'user/:username', component: UserComponent },\r\n  { path: 'tag/:tag', component: TagComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Client';\r\n\r\n  constructor(private iconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) {\r\n      this.iconRegistry.addSvgIcon('bearish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bear.svg'));\r\n      this.iconRegistry.addSvgIcon('bullish', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/bull-face.svg'));\r\n      this.iconRegistry.addSvgIcon('like', this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/like.svg'));\r\n  }\r\n}\r\n\r\n\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgMaterialModule } from './ngmaterial/ngmaterial.module';\r\nimport { WatchlistComponent } from './watchlist/watchlist.component';\r\nimport { WatchlistService } from './watchlist/watchlist.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SubmitPostFormComponent } from './submit-post-form/submit-post-form.component';\r\nimport { FeedContainerComponent } from './feed-container/feed-container.component';\r\nimport { MyFeedComponent } from './my-feed/my-feed.component';\r\nimport { MyFeedService } from './my-feed/my-feed.service';\r\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\r\nimport { LinkifyPipe } from './pipes/linkify-pipe';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\nimport { StockComponent } from './stock/stock.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { TagComponent } from './tag/tag.component';\r\nimport { StripHtmlPipe } from './pipes/stirp-html-pipe';\r\nimport { ApiAuthorizationModule } from './api-authorization/api-authorization.module';\r\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    WatchlistComponent,\r\n    SubmitPostFormComponent,\r\n    FeedContainerComponent,\r\n    MyFeedComponent,\r\n    NewsFeedComponent,\r\n    LinkifyPipe,\r\n    StripHtmlPipe,\r\n    PostDetailsComponent,\r\n    StockComponent,\r\n    UserComponent,\r\n    TagComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ApiAuthorizationModule,    \r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NgMaterialModule\r\n  ],\r\n  providers: [\r\n    WatchlistService, \r\n    MyFeedService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthorizeInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feed-container',\n  templateUrl: './feed-container.component.html',\n  styleUrls: ['./feed-container.component.css']\n})\nexport class FeedContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" backgroundColor=\"primary\" color=\"accent\">\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <mat-icon>chat_bubble_outline</mat-icon>\n            My Feed\n        </ng-template>\n        <app-my-feed></app-my-feed>\n    </mat-tab>\n    <mat-tab label=\"Trending\">\n        <ng-template mat-tab-label>\n            <mat-icon>trending_up</mat-icon>\n            Trending\n        </ng-template>\n        Content 3</mat-tab>\n    <mat-tab label=\"News\">\n        <ng-template mat-tab-label>\n            <mat-icon>rss_feed</mat-icon>\n            News\n        </ng-template>\n        <app-news-feed></app-news-feed>\n    </mat-tab>\n    \n</mat-tab-group>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n","\r\n    <div class=\"flexbox-container\">\r\n        <div class=\"flexbox-item side-navigation\">\r\n            <app-watchlist></app-watchlist>\r\n        </div>\r\n        <div class=\"flexbox-item main-content\">\r\n            <div class=\"flex-main-content\">\r\n                <div class=\"flex-main-content-item1\">\r\n                    <app-submit-post-form></app-submit-post-form>\r\n                </div>\r\n                <div class=\"flex-main-content-item2\">\r\n                    <app-feed-container></app-feed-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n","import { Component, OnInit } from '@angular/core';\nimport { MyFeedService } from './my-feed.service';\nimport { PostModel } from './post-model';\n\n@Component({\n  selector: 'app-my-feed',\n  templateUrl: './my-feed.component.html',\n  styleUrls: ['./my-feed.component.css']\n})\nexport class MyFeedComponent implements OnInit {\n\n  myFeed: PostModel[];\n\n  constructor(private myFeedService: MyFeedService) { }\n\n  ngOnInit(): void {\n    this.myFeedService.getMyFeed()\n      .subscribe(result => {\n        this.myFeed = result;\n        console.log(this.myFeed);\n      }, error => console.error(error));\n  }\n\n  goToPost() {\n    console.log('hello');\n  }\n\n}\n","<div class=\"feed-filter\">\n<mat-button-toggle-group appearance=\"legacy\">\n    <mat-button-toggle checked>All</mat-button-toggle>\n    <mat-button-toggle>Mentions</mat-button-toggle>\n    <mat-button-toggle>Watch List</mat-button-toggle>\n    <mat-button-toggle>Subscription</mat-button-toggle>\n</mat-button-toggle-group>\n</div>\n\n<div *ngFor=\"let post of myFeed\">    \n<mat-card [routerLink]=\"['/post', post.postId]\">\n    <mat-card-header>     \n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-subtitle>\n            <div>\n            {{ post.userName }}   <br>\n            Posted {{ post.postDate }}\n            </div>            \n            \n        </mat-card-subtitle>\n        <!-- <div class=\"bearbullindicator\">            \n            <mat-icon svgIcon=\"bullish\" *ngIf=\"post.bullBearLevel == 'VeryBullish'\"></mat-icon>\n            <mat-icon svgIcon=\"bearish\" *ngIf=\"post.bullBearLevel == 'VeryBearish'\"></mat-icon>\n        </div> -->\n        <div class=\"bearbullindicator\">\n            <div class=\"bearbullindicator1 bullish\"  *ngIf=\"post.bullBearLevel == 'VeryBullish'\">Bullish</div>\n            <div class=\"bearbullindicator1 bearish\"  *ngIf=\"post.bullBearLevel == 'VeryBearish'\">Bearish</div>\n        </div>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <p [innerHTML]=\"post.postText | linkify\"></p>\n    </mat-card-content>\n\n    <mat-card-actions>\n        <button mat-icon-button >\n            <mat-icon class=\"icon-display\">reply</mat-icon>\n        </button>\n        <button mat-icon-button >\n            <mat-icon class=\"icon-display\">format_quote</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.responseCount > 0\"></span>\n                <mat-icon class=\"icon-display\">mode_comment</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\" matBadgeSize=\"small\" *ngIf=\"post.likeCount > 0\"></span>\n                <!-- <img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                 -->\n                <mat-icon svgIcon=\"like\" class=\"icon-display\"></mat-icon>\n        </button>\n        <!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n                <img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\n        </button> -->\n        \n    </mat-card-actions>\n</mat-card>\n<mat-divider></mat-divider>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostModel } from './post-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyFeedService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getMyFeed(): Observable<PostModel[]> {\n    const url = './assets/myfeed.json';\n    return this.http.get<PostModel[]>(url);\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-nav-menu',\r\n    templateUrl: './nav-menu.component.html',\r\n    styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent \r\n{\r\n    isExpanded = false;\r\n\r\n    collapse() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n}\r\n","<header>\r\n    <nav\r\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n    >\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\"><img alt=\"Titos & Titas of Finance Logo\" src=\"./assets/TandT-150x83-logo.png\" /></a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\".navbar-collapse\"\r\n          aria-label=\"Toggle navigation\"\r\n          [attr.aria-expanded]=\"isExpanded\"\r\n          (click)=\"toggle()\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n          [ngClass]=\"{ show: isExpanded }\"\r\n        >\r\n\r\n          <app-login-menu></app-login-menu>\r\n          <ul class=\"navbar-nav flex-grow\">\r\n            <li\r\n              class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n            >\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n            </li>\r\n  \r\n            <!-- <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/cities']\">Cities</a>\r\n            </li>\r\n            <li class=\"nav-item\" [routerLinkActive]=\"['/countries']\">\r\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/countries']\">Countries</a>\r\n            </li> -->\r\n          </ul>\r\n\r\n          <div class=\"searchFormField\">\r\n            <mat-form-field>\r\n              <input matInput id=\"searchBox\" placeholder=\"Search\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NewsRss } from './news-rss';\n// import * as xml2js from \"xml2js\";\n// import { NewsRss } from './news-rss';\n\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.css']\n})\nexport class NewsFeedComponent implements OnInit {\n\n  rssData: NewsRss;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getRssFeedData();\n  }\n\n  getRssFeedData() {\n  \n    this.http\n      .get<NewsRss>(\"./assets/news-feed.json\")\n      .subscribe(data => {          \n        this.rssData = data;\n        // if (this.rssData) {\n        //   for(let i = 0; i < this.rssData.rss.channel.item.length; i++) {\n        //     this.rssData.rss.channel.item[i].description = this.rssData.rss.channel.item[i].description.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\n        //   }\n        // }\n        console.log(this.rssData.rss.channel);\n      });\n  }\n\n}\n","<!-- <ul>\n\t<li *ngFor=\"let o of rssData?.rss.channel.item\">\n\t\t<a href=\"{{ o.link }}\">{{ o.title }}</a>\n\t</li>\n</ul> -->\n\n<div *ngFor=\"let rss of rssData?.rss.channel.item\">    \n\t<mat-card>\n\t\t<mat-card-header>     \n\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\n\t\t\t<mat-card-subtitle>\n\t\t\t\t<div>\n\t\t\t\t<a href=\"https://investing.einnews.com/news/philippine-stock-exchange\">EIN News</a>   <br>\n\t\t\t\tPosted {{ rss.pubDate }}\n\t\t\t\t</div>            \n\t\t\t</mat-card-subtitle>\t\n\t\t</mat-card-header>\n\t\t\n\t\t<mat-card-content>\n\t\t\t<a href=\"{{ rss.link }}\"><p>{{ rss.title }}</p></a>\n\t\t\t\n\t\t\t{{ rss.description | striphtml }}\n\t\t</mat-card-content>\n\t\n\t\t<mat-card-actions>\t\t\t\n\t\t\t<button mat-icon-button >\n\t\t\t\t<mat-icon class=\"icon-display\">format_quote</mat-icon>\n\t\t\t</button>\n\t\t\t<!-- <button mat-icon-button>\n\t\t\t\t<span matBadge=\"{{ post.responseCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\n\t\t\t\t\t<mat-icon>mode_comment</mat-icon>\n\t\t\t</button>\n\t\t\t<button mat-icon-button>\n\t\t\t\t<span matBadge=\"{{ post.likeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\"></span>\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-sharp/24/000000/thumb-up.png\"/>                \n\t\t\t</button> -->\n\t\t\t<!-- <button mat-stroked-button matBadge=\"{{ post.dislikeCount }}\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n\t\t\t\t\t<img src=\"https://img.icons8.com/material-rounded/24/000000/thumbs-down.png\"/>\n\t\t\t</button> -->\n\t\t\t\n\t\t</mat-card-actions>\n\t</mat-card>\n\t<mat-divider></mat-divider>\n\t</div>","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatBadgeModule\n  ],  \n  exports: [\n    // CommonModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatBadgeModule\n  ]\n})\nexport class NgMaterialModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n    name: \"linkify\"\n})\nexport class LinkifyPipe implements PipeTransform{\n    constructor(private domSanitizer: DomSanitizer) {\n\n    }\n\n    transform(value: string, ...args: any[]): any {        \n        let result = value.replace(/[\\$|@|\\#][(\\^)a-zA-Z]+/g, (match) => {            \n            const linkParam = match.replace(/[\\$|@|\\#]/g, \"\");\n            const linkIndicator = match[0];\n            switch(linkIndicator)\n            {\n                case '$':\n                    return `<a href=\"/stock/${linkParam}\">${match}</a>`;\n                case '@':\n                    return `<a href=\"/user/${linkParam}\">${match}</a>`;\n                case '#':\n                    return `<a href=\"/tag/${linkParam}\">${match}</a>`;\n            } \n\n        });\n        return this.domSanitizer.bypassSecurityTrustHtml(result);        \n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'striphtml'\r\n})\r\nexport class StripHtmlPipe implements PipeTransform {\r\n    transform(value: string, ...args: any[]): any {\r\n        return value.replace(/(<([^>]+)>|&#\\d+;)/ig, \"\");\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>post-details works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>stock works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatButtonToggle } from '@angular/material/button-toggle';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-submit-post-form',\n  templateUrl: './submit-post-form.component.html',\n  styleUrls: ['./submit-post-form.component.css']\n})\nexport class SubmitPostFormComponent implements OnInit {\n\n  // bullBearIndicator: number;\n  isBearish: boolean = false;\n  isBullish: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    // console.log(this.bullBearIndicator);\n  }\n\n  bearishClick() {\n    this.isBearish = !this.isBearish;\n    this.isBullish = false;\n    console.log(this.isBearish);\n  }\n\n  bullishClick() {\n    this.isBullish = !this.isBullish;\n    this.isBearish = false;\n  }\n}\n","<mat-card>\n\n    <mat-card-content>\n    <form class=\"tiririt-form\">\n        <mat-form-field class=\"form-field\">\n            <mat-label>Say something about your favorite stock</mat-label>\n            <textarea matInput placeholder=\"Ex. @supertrader @bulltactics $GLO did very well last quarter. #panalo\" \n                maxlength=\"300\"></textarea>\n        </mat-form-field>\n    </form>    \n<!-- <mat-card-actions> -->\n    <div class=\"post-action-container\">\n        <div class=\"post-bear-bull\">\n            <button mat-stroked-button color=\"basic\" (click)=\"bearishClick()\" [class.isBearish]=\"isBearish\">\n                Bearish</button>\n            <button mat-stroked-button color=\"basic\" (click)=\"bullishClick()\" [class.isBullish]=\"isBullish\">                \n                Bullish</button>\n\n        </div>\n        <div class=\"post-buttons\">\n            <button mat-raised-button color=\"primary\" (click)=\"submit()\">Post</button>\n        </div>\n    </div>\n</mat-card-content>\n\n<!-- </mat-card-actions>     -->\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.css']\n})\nexport class TagComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tag works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { WatchlistService } from './watchlist.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { StockViewModel } from '../models/stock-view-model';\n\n@Component({\n  selector: 'app-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css']\n})\nexport class WatchlistComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<StockViewModel>();\n  displayedColumns: string[] = ['symbol', 'price'];\n\n  constructor(\n    private watchListService: WatchlistService\n  ) { }\n\n  ngOnInit(): void {\n    this.watchListService.getWatchList()\n      .subscribe(result => {\n        this.dataSource = new MatTableDataSource<StockViewModel>(result.stocks);\n        console.log(result);\n      }, error => console.error(error));\n  }\n\n}\n","<!-- <div class=\"watchlist-container\"> -->\n    \n    <mat-form-field>\n        <input matInput placeholder=\"Enter symbol\">        \n    </mat-form-field>\n    <button mat-raised-button color=\"primary\">Add</button>    \n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"symbol\">\n            <th mat-header-cell *matHeaderCellDef>Symbol</th>\n            <td mat-cell *matCellDef=\"let stock\">\n               {{ stock.symbol }}\n            </td>\n        </ng-container>        \n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Last Price</th>\n            <td mat-cell *matCellDef=\"let stock\">{{ stock.symbol }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n<!-- </div> -->\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WatchlistModel } from './watchlist-model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(\n    private http: HttpClient,\n    @Inject('BASE_URL') private baseUrl: string) { \n\n  }\n\n  getWatchList(): Observable<WatchlistModel> {\n    const url = 'https://localhost:44303/api/v1/WatchList';    \n    return this.http.get<WatchlistModel>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}